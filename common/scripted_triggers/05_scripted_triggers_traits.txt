#this = species, $country|from$ = country
can_do_advanced_gene_modding = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		has_tradition = tr_genetics_resequencing
	}
}

#this = species, $country|from$ = country
can_remove_beneficial_genetic_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		has_tradition = tr_genetics_resequencing
	}
}

#this = species, $country|from$ = country
can_remove_presapient_genetic_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		OR = {
			has_tradition = tr_genetics_resequencing
			has_technology = tech_epigenetic_triggers
		}
	}
}

#this = species, $country|from$ = country
can_add_overtuned_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = { is_overtuned_empire = yes } # undercoat: moved to scripted trigger
}

#this = species, $country|from$ = country
can_remove_overtuned_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		OR = {
			has_tradition = tr_genetics_resequencing
			is_overtuned_empire = yes # undercoat: moved to scripted trigger
		}
	}
}

#this = species, $country|from$ = country
can_change_habitability_preference = {
	hidden_trigger = { exists = $country|from$ }
	custom_tooltip = {
		text = requires_technology_glandular_acclimation
		$country|from$ = {
			has_technology = tech_glandular_acclimation
		}
	}
}

#this = species, $country|from$ = country
can_add_cybernetic_traits = {
	hidden_trigger = { exists = $country|from$ }
	custom_tooltip = {
		text = requires_tr_cybernetics_integrated_anatomy
		$country|from$ = {
			OR = {
				has_active_tradition = tr_cybernetics_integrated_anatomy
				has_active_tradition = tr_cybernetics_assimilator_integrated_anatomy
			}
		}
	}
	has_trait = trait_cybernetic
}

#this = species, $country|from$ = country
can_remove_cybernetic_traits = {
	hidden_trigger = { exists = $country|from$ }
	custom_tooltip = {
		text = requires_tr_cybernetics_integrated_anatomy
		$country|from$ = {
			OR = {
				has_active_tradition = tr_cybernetics_integrated_anatomy
				has_active_tradition = tr_cybernetics_assimilator_integrated_anatomy
			}
		}
	}
}

#this = species, $country|from$ = country
can_add_genetic_traits = {
	hidden_trigger = { exists = $country|from$ }
	custom_tooltip = {
		text = requires_tech_gene_tailoring
		$country|from$ = {
			has_technology = tech_gene_tailoring
		}
	}
}

#this = species, $country|from$ = country
can_add_droid_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		has_technology = tech_droid_workers
		NOT = { has_policy_flag = ai_outlawed }
	}
}

#this = species, $country|from$ = country
can_add_synth_traits = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		has_technology = tech_synthetic_workers
		NOT = { has_policy_flag = ai_outlawed }
	}
}

#this = species, $country|from$ = country
owner_is_machine_intelligence = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		is_machine_empire = yes
	}
}

#this = species, $country|from$ = country
owner_is_individual_machine = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		is_individual_machine = yes
	}
}

#this = species, $country|from$ = country
owner_is_hive_empire = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		is_hive_empire = yes
	}
}

#this = species, $country|from$ = country
can_do_advanced_robo_modding = {
	hidden_trigger = { exists = $country|from$ }
	$country|from$ = {
		OR = {
			has_tradition = tr_modularity_5
			has_country_flag = synth_physical
		}
	}
}

can_harvest_dna = {
	has_technology = tech_gene_tailoring
	# Genetic ascension requires Utopia
	host_has_dlc = "Utopia"
	# Only regular empires and hive-minds can genetically ascend.
	is_machine_empire = no
	# If you've taken other ascension path, we shouldn't let you harvest DNA anymore.
	NOR = {
		has_cybernetic_ascension = yes
		has_psionic_ascension = yes
		has_synthetic_ascension = yes
	}
}

can_harvest_parts = {
	has_machine_age_dlc = yes
	OR = {
		has_technology = tech_neuro_quantum_links
		has_technology = tech_synthetic_workers
		has_technology = tech_binary_motivators
	}
	# Only machine empires and cyborgs can use mechanical leviathan parts.
	OR = {
		has_active_tradition = tr_cybernetics_integrated_anatomy
		has_active_tradition = tr_cybernetics_assimilator_integrated_anatomy
		is_synthetic_empire = yes
	}
	# If you've taken another ascension path, we shouldn't let you harvest parts anymore.
	NOR = {
		has_genetic_ascension = yes
		has_psionic_ascension = yes
	}
}

is_phototrophic = {
	OR = {
		has_trait = trait_plantoid_phototrophic
		has_trait = trait_plantoid_radiotrophic
		has_trait = trait_advanced_phototrophic
		has_trait = trait_advanced_radiotrophic
		has_trait = trait_harvested_radiotrophic
		has_trait = trait_lithoid_radiotrophic
	}
}

has_phototrophic_energy_upkeep = {
	OR = {
		has_trait = trait_plantoid_phototrophic
		has_trait = trait_advanced_phototrophic
		AND = {
			OR = {
				has_trait = trait_plantoid_radiotrophic
				has_trait = trait_advanced_radiotrophic
				has_trait = trait_harvested_radiotrophic
				has_trait = trait_lithoid_radiotrophic
			}
			NOT = { planet = { is_nuked_world = yes } } # undercoat: moved to scripted trigger
		}
	}
}

has_budding_trait = {
	OR = {
		has_trait = trait_plantoid_budding
		has_trait = trait_lithoid_budding
		has_trait = trait_advanced_budding
	}
}

has_food_upkeep = {
	species = {
		is_archetype = BIOLOGICAL
	}
	NOT = { has_trait = trait_voidling }
}

has_mineral_upkeep = {
	species = {
		is_archetype = LITHOID
	}
	NOT = { has_trait = trait_voidling }
}

has_energy_upkeep = {
	OR = {
		is_robotic_or_voidspawn_species = yes
		has_trait = trait_cyborg_power_intensive
		has_trait = trait_exd
	}
}

empire_has_good_habitability_on_tomb_worlds = {
	OR = {
		is_lithoid = yes
		has_trait = trait_survivor
		has_trait = trait_robot_survivor
		has_trait = trait_pc_nuked_preference
		has_trait = trait_plantoid_radiotrophic
		has_trait = trait_advanced_radiotrophic
		has_trait = trait_harvested_radiotrophic
		has_trait = trait_lithoid_radiotrophic
		has_trait = trait_cybernetic
		has_trait = trait_mechanical
		has_trait = trait_machine_unit
	}
}

can_assemble_budding_pop = {
	has_budding_trait = yes
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_budding_trait = yes
						is_robotic = yes
					}
				}
			}
		}
	}
}

can_assemble_tiyanki_pop = {
	has_trait = trait_tiyanki
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_trait = trait_tiyanki
						is_robotic = yes
					}
				}
			}
		}
	}
}

can_assemble_bio_pop = {
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					is_robotic = no
				}
			}
		}
	}
}

can_assemble_hive_pop = {
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_trait = trait_hive_mind
						is_robotic = yes
					}
				}
			}
		}
	}
}

can_assemble_robot = {
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					is_robotic = yes
				}
			}
		}
	}
}

can_assemble_clone_soldier_pop = {
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_trait = trait_clone_soldier_infertile
						has_trait = trait_clone_soldier_infertile_full_potential
						is_robotic = yes
					}
				}
			}
		}
	}
}

has_psionic_species_trait = {
	OR = {
		has_trait = trait_latent_psionic
		has_trait = trait_psionic
	}
}

has_virtual_species_trait = {
	OR = {
		has_trait = trait_robot_digital_1
		has_trait = trait_robot_digital_2
	}
}

# Check for a specific range of Cyborg traits, as used in script value 'num_cyborg_traits_species'. SEE ALSO 'is_cyborg_empire' (scripted trigger).
has_cyborg_trait = {
	OR = {
		has_trait = trait_cyborg_power_drills
		has_trait = trait_cyborg_harvesters
		has_trait = trait_cyborg_superconductive
		has_trait = trait_cyborg_efficient_processors
		has_trait = trait_cyborg_logic_engines
		has_trait = trait_cyborg_loyalty_circuits
		has_trait = trait_cyborg_double_jointed
		has_trait = trait_cyborg_bulky
		has_trait = trait_cyborg_enhanced_memory
		has_trait = trait_cyborg_durable
		has_trait = trait_cyborg_high_maintenance
		has_trait = trait_cyborg_learning_algorithms
		has_trait = trait_cyborg_power_intensive
		has_trait = trait_cyborg_neural_limiters
		has_trait = trait_cyborg_streamlined_protocols
		has_trait = trait_cyborg_high_bandwidth
		has_trait = trait_cyborg_trading_algorithms
		has_trait = trait_cyborg_scarcity_algorithms
		has_trait = trait_cyborg_stainless_steel_smile
		has_trait = trait_cyborg_welded_countenance
		has_trait = trait_cyborg_apathy_loops
		has_trait = trait_cyborg_bionic_engineers
		has_trait = trait_cyborg_bionic_physicists
		has_trait = trait_cyborg_bionic_sociologists
		has_trait = trait_cyborg_integrated_weaponry
		has_trait = trait_cyborg_delicate_frames
		has_trait = trait_cyborg_limited_memory
		has_trait = trait_cyborg_climate_adjustment_dry
		has_trait = trait_cyborg_climate_adjustment_wet
		has_trait = trait_cyborg_climate_adjustment_frozen
		has_trait = trait_cyborg_ancient_dreadnought
		has_trait = trait_cyborg_enigmatic_fortress
		has_trait = trait_cyborg_infinity_sphere
		has_trait = trait_cyborg_scavenger_bot
		has_trait = trait_cyborg_creed_of_construction
		has_trait = trait_cyborg_creed_of_war
		has_trait = trait_cyborg_creed_of_research
		has_trait = trait_cyborg_creed_of_labor
		has_trait = trait_cyborg_ritualistic_implants
	}
}
