defined_text = {
	name = GetCyberCreed
	text = {
		trigger = {
			owner = {
				OR = {
					has_country_flag = cybernetic_creed_construction
					has_country_flag = cyber_creed_undercover_leader_hammer
				}
			}
		}
		localization_key = CYBERCREED_construction
	}
	text = {
		trigger = {
			owner = {
				OR = {
					has_country_flag = cybernetic_creed_war
					has_country_flag = cyber_creed_undercover_leader_steel
				}
			}
		}
		localization_key = CYBERCREED_war
	}
	text = {
		trigger = {
			owner = {
				OR = {
					has_country_flag = cybernetic_creed_research
					has_country_flag = cyber_creed_undercover_leader_choir
				}
			}
		}
		localization_key = CYBERCREED_research
	}
	text = {
		trigger = {
			owner = {
				OR = {
					has_country_flag = cybernetic_creed_labor
					has_country_flag = cyber_creed_undercover_leader_toil
				}
			}
		}
		localization_key = CYBERCREED_labor
	}
	#Have to pick a creed for the origin
	#default = None
}

defined_text = {
	name = GetCyberCreedEdict
	text = {
		trigger = {
			owner = {
				has_country_flag = cybernetic_creed_construction
			}
		}
		localization_key = edict_cybernetic_creed_construction_edict
	}
	text = {
		trigger = {
			owner = {
				has_country_flag = cybernetic_creed_war
			}
		}
		localization_key = edict_cybernetic_creed_war_edict
	}
	text = {
		trigger = {
			owner = {
				has_country_flag = cybernetic_creed_research
			}
		}
		localization_key = edict_cybernetic_creed_research_edict
	}
	text = {
		trigger = {
			owner = {
				has_country_flag = cybernetic_creed_labor
			}
		}
		localization_key = edict_cybernetic_creed_construction_labor
	}
	default = edict_cybernetic_creed_general_edict
}

defined_text = {
	name = GetCyberSituation
	text = {
		trigger = {
			owner = {
				NOR = {
					is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
					is_hive_empire = yes
				}
			}
		}
		localization_key = situation_cyberization
	}
	text = {
		trigger = {
			owner = {
				is_hive_empire = yes
			}
		}
		localization_key = situation_cyberization_hive
	}
	text = {
		trigger = {
			owner = {
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = situation_cybernetic_creed_cyberization
	}
	#default = None
}

defined_text = {
	name = GetSynthSituation
	text = {
		trigger = {
			always = yes
		}
		localization_key = situation_digitization
	}
}

defined_text = {
	name = GetFleshTypeCyberCreed
	text = {
		trigger = {
			is_species_class = LITHOID
		}
		localization_key = cyber_creed_flesh_rock
	}
	text = {
		trigger = {
			is_species_class = PLANT
		}
		localization_key = cyber_creed_flesh_plant
	}
	text = {
		trigger = {
			is_species_class = ART
		}
		localization_key = cyber_creed_flesh_arthropod
	}
	default = cyber_creed_flesh_default
}

defined_text = {
	name = GetTotalIdentities
	value = value:identity_repository_scaling_mult
}

defined_text = {
 	name = num_neural_chips
 	value = value:num_chip_slave_raw
}

defined_text = {
 	name = num_neural_chips_double
 	value = value:num_chip_slave_raw_double
}

defined_text = {
	name = crisobj_thesis_value
	value = value:crisobj_thesis_value
}

defined_text = {
	name = crisobj_thesis_value_bonus
	value = value:crisobj_thesis_value_bonus
}

defined_text = {
 	name = GetEyeName
	text = {
		trigger = {
			OR = {
				is_species_class = MACHINE
				is_species_class = ROBOT
				is_species_class = AI
			}
		}
		localization_key = get_eye_name_robot
	}
	default = get_eye_name_default_eye
}

defined_text = {
 	name = GetEyeNamePlural
	text = {
		trigger = {
			OR = {
				is_species_class = MACHINE
				is_species_class = ROBOT
				is_species_class = AI
			}
		}
		localization_key = get_eye_name_plural_robot
	}
	default = get_eye_name_plural_default_eye
}

defined_text = {
	name = GetBloodType
	text = {
		trigger = {
			OR = {
				is_species_class = LITHOID
				is_species_class = FUN
			}
		}
		localization_key = blood_type_vital_fluid
	}
	text = {
		trigger = {
			is_species_class = PLANT
		}
		localization_key = blood_type_sap
	}
	text = {
		trigger = {
			is_species_class = ART
		}
		localization_key = blood_type_hemolymph
	}
	text = {
		trigger = {
			is_species_class = NECROID
		}
		localization_key = blood_type_ichor
	}
	text = {
		trigger = {
			OR = {
				is_species_class = MACHINE
				is_species_class = ROBOT
				is_species_class = AI
			}
		}
		localization_key = blood_type_coolant
	}
	default = blood_type_blood
}

defined_text = {
	name = GetBiologicalPopOrPops
	text = {
		trigger = {
			check_variable = {
				which = "synth_opposition"
				value = 1
			}
		}
		localization_key = biological_pop
	}
	text = {
		trigger = {
			NOT = {
				check_variable = {
					which = "synth_opposition"
					value = 1
				}
			}
		}
		localization_key = biological_pops
	}
}

defined_text = {
	name = GetMechanicalPopOrPops
	text = {
		trigger = {
			check_variable = {
				which = "synth_opposition"
				value = 1
			}
		}
		localization_key = mechanical_pop
	}
	text = {
		trigger = {
			NOT = {
				check_variable = {
					which = "synth_opposition"
					value = 1
				}
			}
		}
		localization_key = mechanical_pops
	}
}

defined_text = {
	name = GetNumSynthOpposition
	value = value:num_synth_opposition_x100
}

defined_text = {
	name = GetExodusShipAction
	text = {
		trigger = {
			owner = { NOT = { has_country_flag = exodus_ready } }
		}
		localization_key = exodus_pick_up
	}
	text = {
		trigger = {
			owner = { has_country_flag = exodus_ready }
		}
		localization_key = exodus_dive_in
	}
}

defined_text = {
	name = GetCyberCreedPopsPerMonth
	value = owner.value:pop_to_cyberize_per_month_creed_x100
}

defined_text = {
	name = GetSynthFertPopsPerMonth
	value = owner.value:pop_to_digitize_per_month_synthetic_fertility
}

defined_text = {
	name = GetCyberPopsPerMonth
	value = owner.value:pop_to_cyberize_per_month_x100
}

defined_text = {
	name = GetSynthPopsPerMonth
	value = owner.value:pop_to_digitize_per_month_x100
}

defined_text = {
	name = GetDronePerson
	text = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		localization_key = machine_drone
	}
	text = {
		trigger = {
			owner = { is_gestalt = no }
		}
		localization_key = machine_person
	}
}

defined_text = {
	name = GetDronePersonPlural
	text = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		localization_key = machine_drone_plural
	}
	text = {
		trigger = {
			owner = { is_gestalt = no }
		}
		localization_key = machine_person_plural
	}
}

defined_text = {
	name = GetPaperclipStatus
	random = no
	text = {
		trigger = {
			check_variable = {
				which = paperclips_current_amount
				value >= paperclips_once_again
			}
		}
		localization_key = situation_paperclip_status_positive
	}
	text = {
		trigger = {
			check_variable = {
				which = paperclips_current_amount
				value < paperclips_once_again
			}
			check_variable_arithmetic = {
				which = paperclips_once_again
				subtract = paperclips_current_amount
				divide = prev.trigger:situation_progress
				value <= paperclips_current_income
			}
		}
		localization_key = situation_paperclip_status_on_target
	}
	text = {
		trigger = {
			check_variable = {
				which = paperclips_current_amount
				value < paperclips_once_again
			}
			check_variable = {
				which = paperclips_once_again
				value > paperclips_max_capacity
			}
			days_passed > 30 # So that the game doesn't display insufficient capacity during the first month before calculations have settled
		}
		localization_key = situation_paperclip_status_low_capacity
	}
	text = {
		trigger = {
			check_variable = {
				which = paperclips_current_amount
				value < paperclips_once_again
			}
		}
		localization_key = situation_paperclip_status_negative
	}
	default = payback_debt_collectors_chain_empty
}

defined_text = {
	name = GetDysonSwarmLimit
	value = value:dyson_swarm_limit
}

defined_text = {
	name = GetArcFurnaceLimit
	value = value:arc_furnace_limit
}

defined_text = {
	name = GetClerkOrLogisticDrone
	text = {
		trigger = {
			owner = { is_gestalt = yes }
		}
		localization_key = job_logistics_drone_with_icon
	}
	text = {
		trigger = {
			owner = { is_gestalt = no }
		}
		localization_key = job_clerk_with_icon
	}
}

defined_text = {
	name = GetStormProjectProgress
	text = {
		trigger = {
			NOT = { has_country_flag = synth_queen_researched_first_storm_project }
		}
		localization_key = THE_SYNTH_QUEENS_STORM
	}
	text = {
		trigger = {
			has_country_flag = synth_queen_researched_first_storm_project
		}
		localization_key = THE_SYNTH_QUEENS_STORM_2
	}
}

defined_text = {
	name = GetArcFurnacePlanets
	value = value:num_arc_furnace_planets
}

defined_text = {
	name = GetArcFurnaceColor
	text = {
		trigger = {
			count_system_planet = {
				count < 11
				limit = {
					NOT = { has_deposit_for = shipclass_research_station }
					is_star = no
					is_astral_scar = no
					colonizable_planet = no
				}
			}
		}
		localization_key = color_red
	}
	text = {
		trigger = {
			count_system_planet = {
				count > 10
				limit = {
					NOT = { has_deposit_for = shipclass_research_station }
					is_star = no
					is_astral_scar = no
					colonizable_planet = no
				}
			}
			count_system_planet = {
				count < 16
				limit = {
					NOT = { has_deposit_for = shipclass_research_station }
					is_star = no
					is_astral_scar = no
					colonizable_planet = no
				}
			}
		}
		localization_key = color_yellow
	}
	text = {
		trigger = {
			count_system_planet = {
				count > 15
				limit = {
					NOT = { has_deposit_for = shipclass_research_station }
					is_star = no
					is_astral_scar = no
					colonizable_planet = no
				}
			}
		}
		localization_key = color_green
	}
}
