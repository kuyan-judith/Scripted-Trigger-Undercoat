############################################
###	SCRIPTED LOCALIZATION FOR GERMAN	###
###	Scripted by Pierre du Plessis	 ###
###		Edited by Kai Bagehorn		###
############################################

##To apply, use [event_target.GetXInDE] or [scope.Leader.GetXInDE]

#Ex.: "He is a student => "Er ist ein student[X] / Sie ist eine student[in]."
defined_text = {
	name = GetXInDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_X
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_in
	}
}

#Nominative

#Ex.: "[The] student." => "[Der] Student / [Die] Studentin." (upper case)
defined_text = {
	name = GetDerDieDECap
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
		}
		localization_key = DELOC_Das
	}
	text = {
		trigger = {
			owner = { is_hive_empire = no }
			owner = { is_machine_empire = no }
			loc_leader_masc = yes
		}
		localization_key = DELOC_Der
	}
	text = {
		trigger = {
			owner = { is_hive_empire = no }
			OR = {
				owner = { is_machine_empire = yes }
				loc_leader_fem = yes
			}
		}
		localization_key = DELOC_Die
	}
}

#Ex.: "He is [the] student." => "Er ist [der] Student / Sie ist [die] Studentin." (lower case)
defined_text = {
	name = GetDerDieDE
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
		}
		localization_key = DELOC_das
	}
	text = {
		trigger = {
			owner = { is_hive_empire = no }
			owner = { is_machine_empire = no }
			loc_leader_masc = yes
		}
		localization_key = DELOC_der
	}
	text = {
		trigger = {
			owner = { is_hive_empire = no }
			OR = {
				owner = { is_machine_empire = yes }
				loc_leader_fem = yes
			}
		}
		localization_key = DELOC_die
	}
}

#Genitive

#Ex.: "[Of the] student." => "[Des] Studenten / [Der] Studentin." (upper case)
defined_text = {
	name = GetDesDerDECap
	text = {
		trigger = {
			owner = { is_machine_empire = no }
			loc_leader_masc = yes
		}
		localization_key = DELOC_Des
	}
	text = {
		trigger = {
			OR = {
				owner = { is_machine_empire = yes }
				loc_leader_fem = yes
			}
		}
		localization_key = DELOC_Der
	}
}

#Ex.: "The pen [of the] student." => "Der Stift [des] Studenten / [der] Studentin." (lower case)
defined_text = {
	name = GetDesDerDE
	text = {
		trigger = {
			owner = { is_machine_empire = no }
			loc_leader_masc = yes
		}
		localization_key = DELOC_des
	}
	text = {
		trigger = {
			OR = {
				owner = { is_machine_empire = yes }
				loc_leader_fem = yes
			}
		}
		localization_key = DELOC_der
	}
}

#Dative

#Ex.: "[To the] student." => "[Dem] Studenten / [Der] Studentin." (upper case)
defined_text = {
	name = GetDemDerDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_Dem
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_Der
	}
}

#Ex.: "He said [to the] student." => "Er sagte [dem] Studenten / [der] Studentin." (lower case)
defined_text = {
	name = GetDemDerDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_dem
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_der
	}
}

#Accusative

#sorry, mind drew a blank on proper examples
#Ex.: "[The] student." => "[Den] Studenten / [Die] Studentin." (upper case)
defined_text = {
	name = GetDenDieDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_Den
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_Die
	}
}

#Ex.: "...[the] student" => "...[den] Studenten / [die] Studentin." (lower case)
defined_text = {
	name = GetDenDieDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_den
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_die
	}
}


#Nominative

#Ex: "[A] student" => "Ein[X] Student / Ein[e] Studentin"
defined_text = {
	name = GetXEDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_X
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_e
	}
}

#Ex: "A [good] student" => "Ein gut[er] Student / Eine gut[e] Studentin"
defined_text = {
	name = GetErEDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_er
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_e
	}
}

#Genitive

#Ex: "[Of a] student" => "Ein[es] Studenten / Ein[er] Studentin"
defined_text = {
	name = GetEsErDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_es
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_er
	}
}

#En/En not needed obviously

#Dative

#Ex: "[To a] student" => "Ein[em] Studenten / Ein[er] Studentin"
defined_text = {
	name = GetEmErDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_em
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_er
	}
}

#En/En not needed obviously

#Accusative

#Ex: "[A] student" => "Ein[en] Studenten / Ein[e] Studentin"
defined_text = {
	name = GetEnEDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_en
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_e
	}
}



#Ex: "the doctor" => "der [A]rzt / die [Ä]rztin"
defined_text = {
	name = GetAAeDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_A
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_Ae
	}
}

#Ex: "the eye doctor" => "der Augen[a]rzt / die Augen[ä]rztin"
defined_text = {
	name = GetAAeDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_a
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_ae
	}
}


#Ex: "...ihm / ihr"
defined_text = {
	name = GetIhmIhrDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_ihm
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_ihr
	}
}

#Ex: "Ihm / Ihr"
defined_text = {
	name = GetIhmIhrDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_Ihm
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_Ihr
	}
}

#Ex: "...ihn / sie"
defined_text = {
	name = GetIhnSieDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_ihn
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_sie
	}
}

#Ex: "Ihm / Ihr"
defined_text = {
	name = GetIhnSieDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_Ihn
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_Sie
	}
}

#Ex: "en - innen"
defined_text = {
	name = GetInInnenDECap
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_in
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_innen
	}
}


#Ex: "dessen / deren"
defined_text = {
	name = GetDessenDerenDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_dessen
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_deren
	}
}

###Male Endings - Ex: Male: König[s], Female: Königin

defined_text = {
	name = GetSMaleDE
	text = {
		trigger = {
			owner = { is_machine_empire = no }
			loc_leader_masc = yes
		}
		localization_key = DELOC_s
	}
	text = {
		trigger = {
			OR = {
				owner = { is_machine_empire = yes }
				loc_leader_fem = yes
			}
		}
		localization_key = DELOC_X
	}
}

defined_text = {
	name = GetNMaleDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_n
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_X
	}
}

defined_text = {
	name = GetRMaleDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_r
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_X
	}
}

defined_text = {
	name = GetEMaleDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_e
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_X
	}
}

###Female Endings - Ex: Male: unser König, Female: unser[e] Königin

defined_text = {
	name = GetEFemaleDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_X
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_e
	}
}

defined_text = {
	name = GetInFemaleDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_X
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_in
	}
}

###Both gender Endings - Ex: Male: eine[m] König, Female: eine[r] Königin

defined_text = {
	name = GetZumZurDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_zum
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_zur
	}
}

defined_text = {
	name = GetVomVonderDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_vom
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_vonder
	}
}

defined_text = {
	name = GetSREndingDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_s
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_r
	}
}

defined_text = {
	name = GetMREndingDE
	text = {
		trigger = { loc_leader_masc = yes }
		localization_key = DELOC_m
	}
	text = {
		trigger = { loc_leader_fem = yes }
		localization_key = DELOC_r
	}
}

###Variations of english scripted loc commands
defined_text = {
	name = GetEnvoyDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_getenvoy_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_getenvoy_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_getenvoy_normal
	}
}

defined_text = {
	name = GetEnvoyDE2
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_2_getenvoy_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_2_getenvoy_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_2_getenvoy_normal
	}
}

defined_text = {
	name = GetEnvoyDE3
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_3_getenvoy_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_3_getenvoy_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_3_getenvoy_normal
	}
}

defined_text = {
	name = GetEnvoyDE4
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_4_getenvoy_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_4_getenvoy_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_4_getenvoy_normal
	}
}

defined_text = {
	name = GetResearchersDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_getresearchers_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_getresearchers_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_getresearchers_normal
	}
}

defined_text = {
	name = GetOppositionGalcomLobbyistsDE1
	text = {
		trigger = {
			is_xenophile = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophile
			}
		}
		localization_key = DELOC_1_galcom_movement_xenophobe
	}
	text = {
		trigger = {
			is_xenophobe = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		localization_key = DELOC_1_galcom_movement_xenophile
	}
	text = {
		trigger = {
			is_pacifist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_pacifist
			}
		}
		localization_key = DELOC_1_galcom_movement_militarist
	}
	text = {
		trigger = {
			is_militarist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_militarist
			}
		}
		localization_key = DELOC_1_galcom_movement_pacifist
	}
	text = {
		trigger = {
			is_authoritarian = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_authoritarian
			}
		}
		localization_key = DELOC_1_galcom_movement_egalitarian
	}
	text = {
		trigger = {
			is_egalitarian = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_egalitarian
			}
		}
		localization_key = DELOC_1_galcom_movement_authoritarian
	}
	text = {
		trigger = {
			is_materialist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_materialist
			}
		}
		localization_key = DELOC_1_galcom_movement_spiritualist
	}
	text = {
		trigger = {
			is_spiritualist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		localization_key = DELOC_1_galcom_movement_materialist
	}
}

defined_text = {
	name = GetOppositionGalcomLobbyistsDE2
	text = {
		trigger = {
			is_xenophile = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophile
			}
		}
		localization_key = DELOC_2_galcom_movement_xenophobe
	}
	text = {
		trigger = {
			is_xenophobe = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		localization_key = DELOC_2_galcom_movement_xenophile
	}
	text = {
		trigger = {
			is_pacifist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_pacifist
			}
		}
		localization_key = DELOC_2_galcom_movement_militarist
	}
	text = {
		trigger = {
			is_militarist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_militarist
			}
		}
		localization_key = DELOC_2_galcom_movement_pacifist
	}
	text = {
		trigger = {
			is_authoritarian = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_authoritarian
			}
		}
		localization_key = DELOC_2_galcom_movement_egalitarian
	}
	text = {
		trigger = {
			is_egalitarian = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_egalitarian
			}
		}
		localization_key = DELOC_2_galcom_movement_authoritarian
	}
	text = {
		trigger = {
			is_materialist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_materialist
			}
		}
		localization_key = DELOC_2_galcom_movement_spiritualist
	}
	text = {
		trigger = {
			is_spiritualist = yes
		}
		weight = {
			weight = 1
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		localization_key = DELOC_2_galcom_movement_materialist
	}
}

#German grammar alternatives for GetGalCommunityOrGalImperium
defined_text = {
	name = GetGalCommunityOrGalImperiumDE1
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_1_GALACTIC_COMMUNITY
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_1_GALACTIC_EMPIRE
	}
}

defined_text = {
	name = GetGalCommunityOrGalImperiumDE2
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_2_GALACTIC_COMMUNITY
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_2_GALACTIC_EMPIRE
	}
}

defined_text = {
	name = GetGalCommunityOrGalImperiumDE3
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_3_GALACTIC_COMMUNITY
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_3_GALACTIC_EMPIRE
	}
}

defined_text = {
	name = GetGalCommunityOrGalImperiumDE3Cap
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_3_GALACTIC_COMMUNITY_Cap
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_3_GALACTIC_EMPIRE_Cap
	}
}

defined_text = {
	name = GetGalCommunityOrGalImperiumDE4
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_4_GALACTIC_COMMUNITY
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_4_GALACTIC_EMPIRE
	}
}

defined_text = {
	name = GetGalCommunityOrGalImperiumDE5
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_5_GALACTIC_COMMUNITY
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_5_GALACTIC_EMPIRE
	}
}

#German grammar alternatives for GetCommunityOrImperium
defined_text = {
	name = GetCommunityOrImperiumDE1
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_1_gal_community
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_1_gal_imperium
	}
}

defined_text = {
	name = GetCommunityOrImperiumDE2
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_2_gal_community
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_2_gal_imperium
	}
}

defined_text = {
	name = GetCommunityOrImperiumDE3
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_3_gal_community
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_3_gal_imperium
	}
}

#German grammar alternatives for GetGalCouncilOrImpCouncil
defined_text = {
	name = GetGalCouncilOrImpCouncilDE1
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_1_GALACTIC_COUNCIL
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_1_IMPERIAL_COUNCIL
	}
}

defined_text = {
	name = GetGalCouncilOrImpCouncilDE2
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_2_GALACTIC_COUNCIL
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_2_IMPERIAL_COUNCIL
	}
}

defined_text = {
	name = GetGalCouncilOrImpCouncilDE3
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_3_GALACTIC_COUNCIL
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_3_IMPERIAL_COUNCIL
	}
}

defined_text = {
	name = GetGalCouncilOrImpCouncilDE4
	text = {
		trigger = { has_galactic_emperor = no }
		localization_key = DELOC_4_GALACTIC_COUNCIL
	}
	text = {
		trigger = { has_galactic_emperor = yes }
		localization_key = DELOC_4_IMPERIAL_COUNCIL
	}
}

#German grammar alternatives for GetTeamMember
defined_text = {
	name = GetTeamMemberDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_drone_key
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_team_member_key
	}
}

defined_text = {
	name = GetTeamMemberDE2
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_2_unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_2_drone_key
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_2_team_member_key
	}
}

defined_text = {
	name = GetTeamMemberDE3
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_3_unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_3_drone_key
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_3_team_member_key
	}
}

defined_text = {
	name = GetTeamMemberDE4
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_4_unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_4_drone_key
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_4_team_member_key
	}
}

defined_text = {
	name = GetTeamMemberDE5
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_5_unit_key
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_5_drone_key
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_5_team_member_key
	}
}

#German grammar alternatives for GetScientist
defined_text = {
	name = GetScientistDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_getscientist_normal
	}
}

defined_text = {
	name = GetScientistDE2
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_2_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_2_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_2_getscientist_normal
	}
}

defined_text = {
	name = GetScientistDE3
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_3_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_3_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_3_getscientist_normal
	}
}

defined_text = {
	name = GetScientistDE4
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_4_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_4_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_4_getscientist_normal
	}
}

defined_text = {
	name = GetScientistDE5
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_5_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_5_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_5_getscientist_normal
	}
}

defined_text = {
	name = GetScientistDE6
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_6_getscientist_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_6_getscientist_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_6_getscientist_normal
	}
}

#German grammar alternatives for GetScientistPlural
defined_text = {
	name = GetScientistPluralDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_getscientistplural_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_getscientistplural_hive
	}
	text = {
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_getscientistplural_normal
	}
}

#German grammar alternatives for GetBrainName
defined_text = { # Country scope
	name = GetBrainNameDE1
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_getbrainname_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_getbrainname_hive
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_1_getbrainname_error
	}
}

#German grammar alternatives for GetBrainName
defined_text = { # Country scope
	name = GetBrainNameDE2
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_2_getbrainname_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_2_getbrainname_hive
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_2_getbrainname_error
	}
}

#German grammar alternatives for GetBrainName
defined_text = { # Country scope
	name = GetBrainNameDE3
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_3_getbrainname_machine
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_3_getbrainname_hive
	}
	text = {	# fallback if not Gestalt Consciousness
		trigger = {
			is_gestalt = no
		}
		localization_key = DELOC_3_getbrainname_error
	}
}

#German grammar alternatives for GetPlanetHabitat
defined_text = {
	name = GetPlanetHabitatDE1
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_1_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_1_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_1_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE2
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_2_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_2_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_2_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE3
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_3_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_3_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_3_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE4
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_4_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_4_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_4_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE5
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_5_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_5_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_5_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE6
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_6_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_6_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_6_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE7
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_7_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_7_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_7_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE8
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_8_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_8_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_8_planetmoon
	}
}

defined_text = {
	name = GetPlanetHabitatDE9
	text = {
		trigger = { is_habitat = yes }
		localization_key = DELOC_9_habitat_lowercase
	}
	text = {
		trigger = {
			OR = {
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_9_ringworld_lowercase
	}
	text = {
		trigger = {
			NOR = {
				is_habitat = yes
				is_unshattered_ring_habitable_segment = yes
				is_damaged_ring_segment = yes
				is_planet_class = pc_cybrex
			}
		}
		localization_key = DELOC_9_planetmoon
	}
}

#German grammar alternatives for GetLeviathanParadeName
defined_text = {
	random = no
	name = GetLeviathanParadeNameDE1
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophobe }
		}
		localization_key = DELOC_1_xenophobe_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophile }
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_xenophile_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_xenophile }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_xenophile_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
				has_country_flag = materialist_science
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_materialist_biological_parade_science
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
				has_country_flag = materialist_trophy
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_materialist_biological_parade_trophy
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_materialist
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_materialist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_spiritualist
				has_country_flag = spiritualist_reject
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_spiritualist_biological_parade_reject
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_fanatic_spiritualist
				has_country_flag = spiritualist_accept
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_spiritualist_biological_parade_accept
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_spiritualist }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_spiritualist_mechanical_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_authoritarian }
		}
		localization_key = DELOC_1_authoritarian_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_egalitarian }
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_egalitarian_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_egalitarian }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_egalitarian_mechanical_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_militarist }
		}
		localization_key = DELOC_1_militarist_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_pacifist }
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_pacifist_biological_parade
	}
	text = {
		trigger = {
			owner = { has_ethic = ethic_fanatic_pacifist }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_pacifist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophobe
				is_fanatical = no
			}
		}
		localization_key = DELOC_1_xenophobe_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophile
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_xenophile_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_xenophile
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_xenophile_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
				has_country_flag = materialist_science
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_materialist_biological_parade_science
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
				has_country_flag = materialist_trophy
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_materialist_biological_parade_trophy
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_materialist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_materialist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
				has_country_flag = spiritualist_reject
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_spiritualist_biological_parade_reject
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
				has_country_flag = spiritualist_accept
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_spiritualist_biological_parade_accept
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_spiritualist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_spiritualist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_authoritarian
				is_fanatical = no
			}
		}
		localization_key = DELOC_1_authoritarian_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_egalitarian
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_egalitarian_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_egalitarian
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_egalitarian_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_militarist
				is_fanatical = no
			}
		}
		localization_key = DELOC_1_militarist_mechanical_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_pacifist
				is_fanatical = no
			}
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_pacifist_biological_parade
	}
	text = {
		trigger = {
			owner = {
				has_ethic = ethic_pacifist
				is_fanatical = no
			}
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_pacifist_mechanical_parade
	}
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_hive_biological_parade
	}
	text = {
		trigger = {
			owner = { is_hive_empire = yes }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_hive_mechanical_parade
	}
	text = {
		trigger = {
			owner = { is_machine_empire = yes }
			is_situation_leviathan_biological = yes
		}
		localization_key = DELOC_1_machine_biological_parade
	}
	text = {
		trigger = {
			owner = { is_machine_empire = yes }
			is_situation_leviathan_biological = no
		}
		localization_key = DELOC_1_machine_mechanical_parade
	}
}

#German grammar alternatives for GetLeviathanTargetName
defined_text = {
	name = GetLeviathanTargetNameDE1
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_1_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_1_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_1_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_1_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_1_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_1_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_1_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_1_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_1_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_1_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_1_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_1_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_1_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE2
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_2_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_2_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_2_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_2_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_2_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_2_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_2_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_2_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_2_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_2_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_2_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_2_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_2_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE3
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_3_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_3_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_3_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_3_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_3_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_3_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_3_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_3_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_3_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_3_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_3_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_3_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_3_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE4
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_4_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_4_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_4_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_4_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_4_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_4_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_4_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_4_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_4_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_4_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_4_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_4_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_4_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE5
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_5_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_5_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_5_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_5_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_5_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_5_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_5_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_5_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_5_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_5_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_5_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_5_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_5_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE6
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_6_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_6_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_6_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_6_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_6_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_6_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_6_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_6_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_6_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_6_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_6_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_6_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_6_scripted_SKY_DRAGON
	}
}

defined_text = {
	name = GetLeviathanTargetNameDE7
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_7_leviathans.510.name
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_7_scripted_SHARD
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_7_leviathans.556.name
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_7_leviathans.550.name
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_7_leviathans.545.name
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_7_leviathans.520.name
	}
	text = {
		trigger = { has_situation_flag = celebration_dimensional_horror }
		localization_key = DELOC_7_leviathans.525.name
	}
	text = {
		trigger = { has_situation_flag = celebration_elder_one }
		localization_key = DELOC_7_scripted_ELDER_ONE
	}
	text = {
		trigger = { has_situation_flag = celebration_worm }
		localization_key = DELOC_7_scripted_WORM
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_7_leviathans.540.name
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_7_leviathans.515.name
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_7_NAME_Scavenger_Bot
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_7_scripted_SKY_DRAGON
	}
}

#German grammar alternatives for GetTrophyName
defined_text = {
	name = GetTrophyNameDE1
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_1_drakes_scale
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_1_eye_of_the_shard
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_1_matriarchs_flagella
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_1_voidspawns_chitin
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_1_wraiths_energy_disperser
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_1_devourers_plasma
	}
	text = {
		trigger = {
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = DELOC_1_horrific_inverse_mass
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_1_dreadnoughts_reactor
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_1_fortress_hull_plates
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_1_scavenger_bots_compactor
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_1_sky_dragons_plume
	}
}

defined_text = {
	name = GetTrophyNameDE2
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_2_drakes_scale
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_2_eye_of_the_shard
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_2_matriarchs_flagella
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_2_voidspawns_chitin
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_2_wraiths_energy_disperser
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_2_devourers_plasma
	}
	text = {
		trigger = {
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = DELOC_2_horrific_inverse_mass
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_2_dreadnoughts_reactor
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_2_fortress_hull_plates
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_2_scavenger_bots_compactor
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_2_sky_dragons_plume
	}
}

defined_text = {
	name = GetTrophyNameDE3
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_3_drakes_scale
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_3_eye_of_the_shard
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_3_matriarchs_flagella
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_3_voidspawns_chitin
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_3_wraiths_energy_disperser
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_3_devourers_plasma
	}
	text = {
		trigger = {
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = DELOC_3_horrific_inverse_mass
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_3_dreadnoughts_reactor
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_3_fortress_hull_plates
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_3_scavenger_bots_compactor
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_3_sky_dragons_plume
	}
}

defined_text = {
	name = GetTrophyNameDE4
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_4_drakes_scale
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_4_eye_of_the_shard
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_4_matriarchs_flagella
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_4_voidspawns_chitin
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_4_wraiths_energy_disperser
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_4_devourers_plasma
	}
	text = {
		trigger = {
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = DELOC_4_horrific_inverse_mass
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_4_dreadnoughts_reactor
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_4_fortress_hull_plates
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_4_scavenger_bots_compactor
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_4_sky_dragons_plume
	}
}

defined_text = {
	name = GetTrophyNameDE5
	text = {
		trigger = { has_situation_flag = celebration_ether_drake }
		localization_key = DELOC_5_drakes_scale
	}
	text = {
		trigger = { has_situation_flag = celebration_shard }
		localization_key = DELOC_5_eye_of_the_shard
	}
	text = {
		trigger = { has_situation_flag = celebration_tiyanki_matriarch }
		localization_key = DELOC_5_matriarchs_flagella
	}
	text = {
		trigger = { has_situation_flag = celebration_voidspawn }
		localization_key = DELOC_5_voidspawns_chitin
	}
	text = {
		trigger = { has_situation_flag = celebration_spectral_wraith }
		localization_key = DELOC_5_wraiths_energy_disperser
	}
	text = {
		trigger = { has_situation_flag = celebration_stellar_devourer }
		localization_key = DELOC_5_devourers_plasma
	}
	text = {
		trigger = {
			OR = {
				has_situation_flag = celebration_dimensional_horror
				has_situation_flag = celebration_worm
				has_situation_flag = celebration_elder_one
			}
		}
		localization_key = DELOC_5_horrific_inverse_mass
	}
	text = {
		trigger = { has_situation_flag = celebration_automated_dreadnought }
		localization_key = DELOC_5_dreadnoughts_reactor
	}
	text = {
		trigger = { has_situation_flag = celebration_enigmatic_fortress }
		localization_key = DELOC_5_fortress_hull_plates
	}
	text = {
		trigger = { has_situation_flag = celebration_scavenger_bot }
		localization_key = DELOC_5_scavenger_bots_compactor
	}
	text = {
		trigger = { has_situation_flag = celebration_hrozgar }
		localization_key = DELOC_5_sky_dragons_plume
	}
}

#German grammar alternatives for GetFinancialAdvisorAgencyCap
define_text = {
	name = GetFinancialAdvisorAgencyCapDE1

	text = {
		trigger = {
			is_megacorp = yes
		}
		weight = 10
		localization_key = DELOC_1_financial_advisors_megacorp_upper
	}
	text = {
		trigger = {
			is_authoritarian = yes
		}
		weight = {
			base = 6
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_authoritarian
			}
		}
		localization_key = DELOC_1_financial_advisors_authoritarian_upper
	}
	text = {
		trigger = {
			is_xenophile = yes
		}
		weight = {
			base = 6
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_xenophile
			}
		}
		localization_key = DELOC_1_financial_advisors_xenophile_upper
	}
	text = {
		trigger = {
			is_spiritualist = yes
		}
		weight = {
			base = 6
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_spiritualist
			}
		}
		localization_key = DELOC_1_financial_advisors_spiritualist_upper
	}
	text = {
		trigger = {
			is_egalitarian = yes
		}
		weight = {
			base = 6
			modifier = {
				factor = 2
				has_ethic = ethic_fanatic_egalitarian
			}
		}
		localization_key = DELOC_1_financial_advisors_egalitarian_upper
	}
	text = {
		trigger = {
			OR = {
				is_materialist = yes
				is_pacifist = yes
			}
		}
		weight = {
			base = 4
			modifier = {
				factor = 2
				OR = {
					has_ethic = ethic_fanatic_materialist
					has_ethic = ethic_fanatic_pacifist
				}
			}
		}
		localization_key = DELOC_1_financial_advisors_xenophile_upper
	}
	text = {
		trigger = {
			is_hive_empire = yes
		}
		localization_key = DELOC_1_financial_advisors_hive_upper
	}
	text = {
		trigger = {
			is_machine_empire = yes
		}
		localization_key = DELOC_1_financial_advisors_machine_upper
	}

	default = DELOC_1_financial_advisors_generic_upper
}

#German grammar alternatives for GetShroudPatron
defined_text = {
	name = GetShroudPatronDE1
	text = {
		localization_key = DELOC_1_name_composer
		trigger = {
			OR = {
				has_modifier = covenant_composer_of_strands_0
				has_modifier = covenant_composer_of_strands
			}
		}
	}
	text = {
		localization_key = DELOC_1_name_eater
		trigger = {
			OR = {
				has_modifier = covenant_eater_of_worlds_0
				has_modifier = covenant_eater_of_worlds
			}
		}
	}
	text = {
		localization_key = DELOC_1_name_instrument
		trigger = {
			OR = {
				has_modifier = covenant_instrument_of_desire_0
				has_modifier = covenant_instrument_of_desire
			}
		}
	}
	text = {
		localization_key = DELOC_1_name_whisperers
		trigger = {
			OR = {
				has_modifier = covenant_whisperers_in_the_void_0
				has_modifier = covenant_whisperers_in_the_void
			}
		}
	}
}

#German grammar alternatives for GetShroudPatron
defined_text = {
	name = GetShroudPatronDE2
	text = {
		localization_key = DELOC_2_name_composer
		trigger = {
			OR = {
				has_modifier = covenant_composer_of_strands_0
				has_modifier = covenant_composer_of_strands
			}
		}
	}
	text = {
		localization_key = DELOC_2_name_eater
		trigger = {
			OR = {
				has_modifier = covenant_eater_of_worlds_0
				has_modifier = covenant_eater_of_worlds
			}
		}
	}
	text = {
		localization_key = DELOC_2_name_instrument
		trigger = {
			OR = {
				has_modifier = covenant_instrument_of_desire_0
				has_modifier = covenant_instrument_of_desire
			}
		}
	}
	text = {
		localization_key = DELOC_2_name_whisperers
		trigger = {
			OR = {
				has_modifier = covenant_whisperers_in_the_void_0
				has_modifier = covenant_whisperers_in_the_void
			}
		}
	}
}

#German grammar alternatives for GetShroudPatron
defined_text = {
	name = GetShroudPatronDE3
	text = {
		localization_key = DELOC_3_name_composer
		trigger = {
			OR = {
				has_modifier = covenant_composer_of_strands_0
				has_modifier = covenant_composer_of_strands
			}
		}
	}
	text = {
		localization_key = DELOC_3_name_eater
		trigger = {
			OR = {
				has_modifier = covenant_eater_of_worlds_0
				has_modifier = covenant_eater_of_worlds
			}
		}
	}
	text = {
		localization_key = DELOC_3_name_instrument
		trigger = {
			OR = {
				has_modifier = covenant_instrument_of_desire_0
				has_modifier = covenant_instrument_of_desire
			}
		}
	}
	text = {
		localization_key = DELOC_3_name_whisperers
		trigger = {
			OR = {
				has_modifier = covenant_whisperers_in_the_void_0
				has_modifier = covenant_whisperers_in_the_void
			}
		}
	}
}

#German grammar alternatives for GetShroudPatron
defined_text = {
	name = GetShroudPatronDE4
	text = {
		localization_key = DELOC_4_name_composer
		trigger = {
			OR = {
				has_modifier = covenant_composer_of_strands_0
				has_modifier = covenant_composer_of_strands
			}
		}
	}
	text = {
		localization_key = DELOC_4_name_eater
		trigger = {
			OR = {
				has_modifier = covenant_eater_of_worlds_0
				has_modifier = covenant_eater_of_worlds
			}
		}
	}
	text = {
		localization_key = DELOC_4_name_instrument
		trigger = {
			OR = {
				has_modifier = covenant_instrument_of_desire_0
				has_modifier = covenant_instrument_of_desire
			}
		}
	}
	text = {
		localization_key = DELOC_4_name_whisperers
		trigger = {
			OR = {
				has_modifier = covenant_whisperers_in_the_void_0
				has_modifier = covenant_whisperers_in_the_void
			}
		}
	}
}

#German grammar alternatives for GetShroudPatron
defined_text = {
	name = GetShroudPatronDE5
	text = {
		localization_key = DELOC_5_name_composer
		trigger = {
			OR = {
				has_modifier = covenant_composer_of_strands_0
				has_modifier = covenant_composer_of_strands
			}
		}
	}
	text = {
		localization_key = DELOC_5_name_eater
		trigger = {
			OR = {
				has_modifier = covenant_eater_of_worlds_0
				has_modifier = covenant_eater_of_worlds
			}
		}
	}
	text = {
		localization_key = DELOC_5_name_instrument
		trigger = {
			OR = {
				has_modifier = covenant_instrument_of_desire_0
				has_modifier = covenant_instrument_of_desire
			}
		}
	}
	text = {
		localization_key = DELOC_5_name_whisperers
		trigger = {
			OR = {
				has_modifier = covenant_whisperers_in_the_void_0
				has_modifier = covenant_whisperers_in_the_void
			}
		}
	}
}

defined_text = {
	name = GetPreFTLUpperDE1
	text = {
		trigger = {
			has_ethic = ethic_fanatic_authoritarian
		}
		localization_key = DELOC_1_primitive
	}
	text = {
		trigger = {
			OR = {
				has_ethic = ethic_fanatic_xenophobe
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		localization_key = DELOC_1_savage
	}
	text = {
		trigger = {
			has_ethic = ethic_fanatic_spiritualist
		}
		localization_key = DELOC_1_unenlightened
	}
	text = {
		trigger = {
			has_ethic = ethic_fanatic_materialist
		}
		localization_key = DELOC_1_unsophisticated
	}
	text = {
		trigger = {
			has_ethic = ethic_fanatic_militarist
		}
		localization_key = DELOC_1_barbarian
	}
	default = pre_ftl
}

defined_text = {
	name = GetNewAgeDE1
	random = no
	text = {
		trigger = {
			has_country_flag = new_stone_age
		}
		localization_key = DELOC_1_stone_age
	}
	text = {
		trigger = {
			has_country_flag = new_bronze_age
		}
		localization_key = DELOC_1_bronze_age
	}
	text = {
		trigger = {
			has_country_flag = new_iron_age
		}
		localization_key = DELOC_1_iron_age
	}
	text = {
		trigger = {
			has_country_flag = new_late_medieval_age
		}
		localization_key = DELOC_1_late_medieval_age
	}
	text = {
		trigger = {
			has_country_flag = new_renaissance_age
		}
		localization_key = DELOC_1_renaissance_age
	}
	text = {
		trigger = {
			has_country_flag = new_steam_age
		}
		localization_key = DELOC_1_steam_age
	}
	text = {
		trigger = {
			has_country_flag = new_industrial_age
		}
		localization_key = DELOC_1_industrial_age
	}
	text = {
		trigger = {
			has_country_flag = new_machine_age
		}
		localization_key = DELOC_1_machine_age
	}
	text = {
		trigger = {
			has_country_flag = new_atomic_age
		}
		localization_key = DELOC_1_atomic_age
	}
	text = {
		trigger = {
			has_country_flag = new_early_space_age
		}
		localization_key = DELOC_1_early_space_age
	}
}

defined_text = {
	name = GetNewAgeDE2
	random = no
	text = {
		trigger = {
			has_country_flag = new_stone_age
		}
		localization_key = DELOC_2_stone_age
	}
	text = {
		trigger = {
			has_country_flag = new_bronze_age
		}
		localization_key = DELOC_2_bronze_age
	}
	text = {
		trigger = {
			has_country_flag = new_iron_age
		}
		localization_key = DELOC_2_iron_age
	}
	text = {
		trigger = {
			has_country_flag = new_late_medieval_age
		}
		localization_key = DELOC_2_late_medieval_age
	}
	text = {
		trigger = {
			has_country_flag = new_renaissance_age
		}
		localization_key = DELOC_2_renaissance_age
	}
	text = {
		trigger = {
			has_country_flag = new_steam_age
		}
		localization_key = DELOC_2_steam_age
	}
	text = {
		trigger = {
			has_country_flag = new_industrial_age
		}
		localization_key = DELOC_2_industrial_age
	}
	text = {
		trigger = {
			has_country_flag = new_machine_age
		}
		localization_key = DELOC_2_machine_age
	}
	text = {
		trigger = {
			has_country_flag = new_atomic_age
		}
		localization_key = DELOC_2_atomic_age
	}
	text = {
		trigger = {
			has_country_flag = new_early_space_age
		}
		localization_key = DELOC_2_early_space_age
	}
}

