#############################
# Scripted Loc - BioGenesis #
#############################

#Define term for wormhole invaders, Starlit Citadel

defined_text = {
	name = GetInvadersUpper
	text = {
		trigger = {
			is_xenophobe = yes
		}
		localization_key = filthy_invaders
	}
	text = {
		trigger = {
			is_spiritualist = yes
			is_xenophobe = no
		}
		localization_key = demon_invaders
	}
	text = {
		trigger = {
			is_militarist = yes
			is_xenophobe = no
			is_spiritualist = no
		}
		localization_key = nameless_invaders
	}
	default = invaders
}

defined_text = {
	name = GetInvadersLower
	text = {
		trigger = {
			is_xenophobe = yes
		}
		localization_key = filthy_invaders_lower
	}
	text = {
		trigger = {
			is_spiritualist = yes
			is_xenophobe = no
		}
		localization_key = demon_invaders_lower
	}
	text = {
		trigger = {
			is_militarist = yes
			is_xenophobe = no
			is_spiritualist = no
		}
		localization_key = nameless_invaders_lower
	}
	default = invaders_lower
}
# defined_text = {
# 	name = GetInvadersLower
# 	text = {
# 		trigger = {
# 			is_xenophobe = yes
# 		}
# 		localization_key = filthy_invaders_lower
# 	}
# 	text = {
# 		trigger = {
# 			is_xenophobe = no
# 			is_spiritualist = yes
# 			is_militarist = yes
# 		}
# 		localization_key = demon_invaders_lower
# 	}
# 	text = {
# 		trigger = {
# 			is_xenophobe = yes
# 		}
# 		localization_key = filthy_invaders_lower
# 	}
# 	text = {
# 		trigger = {
# 			is_spiritualist = yes
# 		}
# 		localization_key = demon_invaders_lower
# 	}
# 	text = {
# 		trigger = {
# 			is_militarist = yes
# 		}
# 		localization_key = nameless_invaders_lower
# 	}
# 	default = invaders_lower
# }

defined_text = {
	name = GetConsumedGenes
	text = {
		trigger = {
			has_any_consumed_genes = yes
		}
		localization_key = evopred_outcome_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetHumanoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_humanoid_dna
		}
		localization_key = humanoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetMammalianGenes
	text = {
		trigger = {
			has_country_flag = consumed_mammalian_dna
		}
		localization_key = mammalian_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetReptilianGenes
	text = {
		trigger = {
			has_country_flag = consumed_reptilian_dna
		}
		localization_key = reptilian_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetAvianGenes
	text = {
		trigger = {
			has_country_flag = consumed_avian_dna
		}
		localization_key = avian_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetArthropoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_arthropoid_dna
		}
		localization_key = arthropoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetMolluscoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_molluscoid_dna
		}
		localization_key = molluscoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetFungoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_fungoid_dna
		}
		localization_key = fungoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetPlantoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_plantoid_dna
		}
		localization_key = plantoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetLithoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_lithoid_dna
		}
		localization_key = lithoid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetNecroidGenes
	text = {
		trigger = {
			has_country_flag = consumed_necroid_dna
		}
		localization_key = necroid_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetAquaticGenes
	text = {
		trigger = {
			has_country_flag = consumed_aquatic_dna
		}
		localization_key = aquatic_genes_list
	}
	default = BLANK_STRING
}
defined_text = {
	name = GetToxoidGenes
	text = {
		trigger = {
			has_country_flag = consumed_toxoid_dna
		}
		localization_key = toxoid_genes_list
	}
	default = BLANK_STRING
}

defined_text = {
	name = GetApexDefeatedSpecies
	text = {
		trigger = {
			has_country_flag = apex_humanoid
		}
		localization_key = HUM_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_mammalian
		}
		localization_key = MAM_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_reptilian
		}
		localization_key = REP_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_avian
		}
		localization_key = AVI_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_arthropoid
		}
		localization_key = ART_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_molluscoid
		}
		localization_key = MOL_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_fungoid
		}
		localization_key = FUN_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_plantoid
		}
		localization_key = PLANT_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_lithoid
		}
		localization_key = LITHOID_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_necroid
		}
		localization_key = NECROID_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_aquatic
		}
		localization_key = AQUATIC_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_toxoid
		}
		localization_key = TOX_plural
	}
	text = {
		trigger = {
			has_country_flag = apex_machine
		}
		localization_key = MACHINE_plural
	}
	default = ENEMIES
}

# Growth Chamber Upgrade
defined_text = {
	name = GetAdvancedGrowthChamberTitle
	text = {
		trigger = {
			has_overlord_dlc = yes
		}
		localization_key = tech_growth_chamber_2_overlord_tt_effect
	}
	default = tech_growth_chamber_2_tt_effect
}

defined_text = {
	name = GetGeneticStage1Effects
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_purity
			is_wilderness_empire = no
		}
		localization_key = genetic_stage_one_purity_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_purity
			is_wilderness_empire = yes
		}
		localization_key = BLANK_STRING
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_cloning
		}
		localization_key = genetic_stage_one_cloning_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_mutation
		}
		localization_key = genetic_stage_one_mutation_tt
	}
	default = genetic_stage_1_default_tt
}

defined_text = {
	name = GetGeneticStage2Effects
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_2_purity
			is_wilderness_empire = no
		}
		localization_key = genetic_stage_two_purity_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_purity
			is_wilderness_empire = yes
		}
		localization_key = BLANK_STRING
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_2_cloning
		}
		localization_key = genetic_stage_two_cloning_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_2_mutation
		}
		localization_key = genetic_stage_two_mutation_tt
	}
	default = genetic_stage_2_default_tt
}

defined_text = {
	name = GetGeneticStage3Effects
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_3_purity
			is_wilderness_empire = no
		}
		localization_key = genetic_stage_three_purity_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_1_purity
			is_wilderness_empire = yes
		}
		localization_key = BLANK_STRING
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_3_cloning
		}
		localization_key = genetic_stage_three_cloning_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = genetic_ascension_stage_3_mutation
		}
		localization_key = genetic_stage_three_mutation_tt
	}
	default = genetic_stage_3_default_tt
}

defined_text = {
	name = GetGenomicSwap
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = healthcare_is_genomic_researcher_tt
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = spawning_is_genomic_researcher_tt
	}
	default = healthcare_is_genomic_researcher_tt
}

defined_text = {
	name = GetGenomicJobWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_genomic_researcher_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_genomic_drone_with_icon
	}
	default = job_genomic_researcher_with_icon
}

defined_text = {
	name = GetGenomicJobsPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_genomic_researcher_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_genomic_drone_plural_with_icon
	}
	default = job_genomic_researcher_plural_with_icon
}

defined_text = {
	name = GetHasBackupCloneDesc
	text = {
		trigger = {
			exists = owner
			owner = {
				is_cloning_authority = yes
				has_cloning_biochemical_composure_tradition = yes
			}
		}
		localization_key = leader_trait_has_backup_clone_improved_desc
	}
	default = leader_trait_has_backup_clone_default_desc
}

defined_text = {
	name = GetBackupCloneName
	text = {
		trigger = {
			is_ruler = yes
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_imperial_authority = yes
			}
		}
		localization_key = leader_trait_backup_clone_imperial
	}
	default = leader_trait_backup_clone_default
}

defined_text = {
	name = GetBackupCloneNamePlural
	text = {
		trigger = {
			is_ruler = yes
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_imperial_authority = yes
			}
		}
		localization_key = leader_trait_backup_clone_imperial_plural
	}
	default = leader_trait_backup_clone_default_plural
}

defined_text = {
	name = GetBackupCloneDesc
	text = {
		trigger = {
			is_ruler = yes
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_imperial_authority = yes
			}
		}
		localization_key = leader_trait_backup_clone_imperial_desc
	}
	default = leader_trait_backup_clone_default_desc
}

defined_text = {
	name = GetAAnBackupCloneLower
	text = {
		trigger = {
			is_ruler = yes
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_imperial_authority = yes
			}
		}
		localization_key = string_an
	}
	default = string_a
}

defined_text = {
	name = GetDegradationLevel
	text = {
		trigger = {
			has_trait = leader_trait_backup_clone
			leader_has_reduced_clone_degradation = yes
		}
		localization_key = backup_clone_0_degradation
	}
	text = {
		trigger = {
			OR = {
				AND = {
					has_trait = leader_trait_backup_clone
					leader_has_reduced_clone_degradation = no
				}
				AND = {
					has_trait = leader_trait_backup_clone_2
					leader_has_reduced_clone_degradation = yes
				}
			}
		}
		localization_key = backup_clone_1_degradation
	}
	text = {
		trigger = {
			OR = {
				AND = {
					has_trait = leader_trait_backup_clone_2
					leader_has_reduced_clone_degradation = no
				}
				AND = {
					has_trait = leader_trait_backup_clone_3
					leader_has_reduced_clone_degradation = yes
				}
			}
		}
		localization_key = backup_clone_2_degradation
	}
	text = {
		trigger = {
			has_trait = leader_trait_backup_clone_3
			leader_has_reduced_clone_degradation = no
		}
		localization_key = backup_clone_3_degradation
	}
	default = backup_clone_1_degradation
}

defined_text = {
	name = GetLeaderSurvivedReason
	text = {
		trigger = {
			leader_backup_clone_can_activate = yes
		}
		localization_key = LEADER_SURVIVED_REASON_CLONE
	}
	default = LEADER_SURVIVED_REASON_DEFAULT
}

defined_text = {
	name = GetLeaderShipSurvivedReason
	text = {
		trigger = {
			leader_backup_clone_can_activate = yes
		}
		localization_key = LEADER_SURVIVED_REASON_CLONE
	}
	default = LEADER_SURVIVED_REASON_SHIP_DEFAULT
}

defined_text = {
	name = GetEnvironmentalIntegrationEffects
	text = {
		trigger = {
			has_tradition = tr_mutation_adopt
		}
		localization_key = tr_mutation_environmental_integration_2_tt
	}
	default = tr_mutation_environmental_integration_1_tt
}

defined_text = {
	name = GetPurityAuthority
	text = {
		trigger = {
			is_scope_valid = yes
			is_democratic_authority = yes
		}
		localization_key = "['authority:auth_democratic:auth_bio_democratic_purity']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_oligarchic_authority = yes
		}
		localization_key = "['authority:auth_oligarchic:auth_bio_oligarchic_purity']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_dictatorial_authority = yes
		}
		localization_key = "['authority:auth_dictatorial:auth_bio_dictatorial_purity']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_imperial_authority = yes
		}
		localization_key = "['authority:auth_imperial:auth_bio_imperial_purity']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
		}
		localization_key = "['authority:auth_corporate:auth_bio_corporate_purity']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = "['authority:auth_hive_mind:auth_bio_hive_purity']"
	}
	default = "['authority:auth_democratic:auth_bio_democratic_purity']"
}

defined_text= {
	name = GetBiochemicalComposureSwapTT
	text = {
		trigger = {
			OR = {
				is_cloning_authority = yes
				has_tradition = tr_purity_adopt
				has_tradition = tr_mutation_adopt
			}
		}
		localization_key = BLANK_STRING
	}
	default = tr_cloning_biochemical_composure_swap_tt
}

defined_text = {
	name = GetCloningAuthority
	text = {
		trigger = {
			is_scope_valid = yes
			is_democratic_authority = yes
		}
		localization_key = "['authority:auth_democratic:auth_bio_democratic_cloning']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_oligarchic_authority = yes
		}
		localization_key = "['authority:auth_oligarchic:auth_bio_oligarchic_cloning']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_dictatorial_authority = yes
		}
		localization_key = "['authority:auth_dictatorial:auth_bio_dictatorial_cloning']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_imperial_authority = yes
		}
		localization_key = "['authority:auth_imperial:auth_bio_imperial_cloning']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
		}
		localization_key = "['authority:auth_corporate:auth_bio_corporate_cloning']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = "['authority:auth_hive_mind:auth_bio_hive_cloning']"
	}
	default = "['authority:auth_democratic:auth_bio_democratic_cloning']"
}

defined_text = {
	name = GetMutationAuthority
	text = {
		trigger = {
			is_scope_valid = yes
			is_democratic_authority = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_democratic:auth_bio_democratic_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_oligarchic_authority = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_oligarchic:auth_bio_oligarchic_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_dictatorial_authority = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_dictatorial:auth_bio_dictatorial_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_imperial_authority = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_imperial:auth_bio_imperial_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_corporate:auth_bio_corporate_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_hive_mind:auth_bio_hive_mutation']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_democratic_authority = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_democratic:auth_bio_democratic_evopred']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_oligarchic_authority = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_oligarchic:auth_bio_oligarchic_evopred']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_dictatorial_authority = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_dictatorial:auth_bio_dictatorial_evopred']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_imperial_authority = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_imperial:auth_bio_imperial_evopred']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_corporate:auth_bio_corporate_evopred']"
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['authority:auth_hive_mind:auth_bio_hive_mind_evopred']"
	}
	default = "['authority:auth_democratic:auth_bio_democratic_mutation']"
}

define_text = {
	name = GetMutationAuthorities
	text = {
		trigger = {
			is_evolutionary_predators_empire = no # undercoat: moved to scripted trigger
		}
		localization_key = "['concept_mutation_authorities']"
	}
	text = {
		trigger = {
			is_evolutionary_predators_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = "['concept_mutation_authorities_evopred']"
	}
}

# Special First Contacted scripted loc for the Hive Fallen Empire, use only in there.

define_text = {
	name = GetPrimaryHiveFEConversation
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_war }
		}
		localization_key = war_first_hivefe
	}
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_growth }
		}
		localization_key = growth_first_hivefe
	}
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_control }
		}
		localization_key = control_first_hivefe
	}
}

define_text = {
	name = GetSecondaryHiveFEConversation
	text = {
		trigger = {
			has_country_flag = fe_hive_war_second
		}
		localization_key = war_second_hivefe
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_growth_second
		}
		localization_key = growth_second_hivefe
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_control_second
		}
		localization_key = control_second_hivefe
	}
}

define_text = {
	name = GetTertiaryHiveFEConversation
	text = {
		trigger = {
			has_country_flag = fe_hive_war_third
		}
		localization_key = war_second_hivefe
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_growth_third
		}
		localization_key = growth_second_hivefe
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_control_third
		}
		localization_key = control_second_hivefe
	}
}

define_text = {
	name = GetPrimaryHiveFEName
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_war }
		}
		localization_key = NAME_War
	}
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_growth }
		}
		localization_key = NAME_Growth
	}
	text = {
		trigger = {
			event_target:contact_empire = { has_country_flag = fallen_empire_hive_control }
		}
		localization_key = NAME_Control
	}
}

define_text = {
	name = GetSecondaryHiveFEName
	text = {
		trigger = {
			has_country_flag = fe_hive_war_second
		}
		localization_key = NAME_War
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_growth_second
		}
		localization_key = NAME_Growth
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_control_second
		}
		localization_key = NAME_Control
	}
}

define_text = {
	name = GetTertiaryHiveFEName
	text = {
		trigger = {
			has_country_flag = fe_hive_war_third
		}
		localization_key = NAME_War
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_growth_third
		}
		localization_key = NAME_Growth
	}
	text = {
		trigger = {
			has_country_flag = fe_hive_control_third
		}
		localization_key = NAME_Control
	}
}

define_text = {
	name = GetPassFail
	text = {
		trigger = {
			has_country_flag = should_fail_resolution
		}
		localization_key = fail_resolution
	}
	text = {
		trigger = {
			has_country_flag = should_pass_resolution
		}
		localization_key = pass_resolution
	}
}

define_text = {
	name = GetDeepSpaceCitadelLimit
	value = modifier:deep_space_citadel_limit_add
}

defined_text = {
	name = growth_factor_value
	value = value:growth_factor_display
}

define_text = {
	name = GetTrust10
	text = {
		trigger = {
			is_familiar_face_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = neutral_five
	}
	default = neutral_ten
}

define_text = {
	name = GetTrust20
	text = {
		trigger = {
			is_familiar_face_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = good_ten
	}
	default = good_twenty
}

define_text = {
	name = GetTrust30
	text = {
		trigger = {
			is_familiar_face_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = exellent_fifteen
	}
	default = excellent_thirty
}

define_text = {
	name = GetTrust50
	text = {
		trigger = {
			is_familiar_face_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = excellent_twenty_five
	}
	default = excellent_fifty
}

define_text = {
	name = GetShipType
	text = {
		trigger = {
			exists = owner
			owner = {
				country_uses_bio_ships = yes
			}
		}
		localization_key = bio_ship
	}
	default = default_ship
}

defined_text = {
 	name = num_tranferred_pops
 	value = owner.value:transferred_pops_district_scale
}

defined_text = { #Assumed Scope: Species
	name = GetInterestingTraitName
	random = no
	text = {
		trigger = {
			has_species_flag = trait_cave_dweller
		}
		localization_key = trait_cave_dweller
	}
	text = {
		trigger = {
			has_species_flag = trait_survivor
		}
		localization_key = trait_survivor
	}
	text = {
		trigger = {
			has_species_flag = trait_enigmatic_intelligence
		}
		localization_key = trait_enigmatic_intelligence
	}
	text = {
		trigger = {
			has_species_flag = trait_bioadaptability
		}
		localization_key = trait_bioadaptability
	}
	text = {
		trigger = {
			has_species_flag = trait_social_pheromones
		}
		localization_key = trait_social_pheromones
	}
	text = {
		trigger = {
			has_species_flag = trait_limited_regeneration
		}
		localization_key = trait_limited_regeneration
	}
	text = {
		trigger = {
			has_species_flag = trait_stargazer
		}
		localization_key = trait_stargazer
	}
	text = {
		trigger = {
			has_species_flag = trait_brainslug
		}
		localization_key = trait_brainslug
	}
	text = {
		trigger = {
			has_species_flag = trait_plasmic
		}
		localization_key = trait_plasmic
	}
	text = {
		trigger = {
			has_species_flag = trait_storm_fused
		}
		localization_key = trait_storm_fused
	}
	text = {
		trigger = {
			has_species_flag = trait_storm_touched
		}
		localization_key = trait_storm_touched
	}
	text = {
		trigger = {
			has_species_flag = trait_drake_scaled
		}
		localization_key = trait_drake_scaled
	}
	text = {
		trigger = {
			has_species_flag = trait_tiyanki
		}
		localization_key = trait_tiyanki
	}
	text = {
		trigger = {
			has_species_flag = trait_voidling
		}
		localization_key = trait_voidling
	}
	text = {
		trigger = {
			has_species_flag = trait_notofthisworld
		}
		localization_key = trait_notofthisworld
	}
	text = {
		trigger = {
			has_species_flag = trait_exd
		}
		localization_key = trait_exd
	}
}

defined_text = {
	name = GetNumTelepathsAndTransference
	value = value:num_telepaths_and_transference
}

####################
# Wilderness Origin
####################

# Espionage Operation (Embed Planetary Roots) scope | see also 'wilderness_get_natural_blocker_name'
define_text = {
	name = GetRootsBlockerName
	text = {
		trigger = { has_espionage_operation_flag = d_deep_sinkhole }
		localization_key = deep_sinkhole_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_quicksand_basin }
		localization_key = quicksand_basin_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_active_volcano }
		localization_key = active_volcano_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_mountain_range }
		localization_key = mountain_range_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_dangerous_wildlife_blocker }
		localization_key = wildlife_blocker_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_dense_jungle }
		localization_key = dense_jungle_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_toxic_kelp }
		localization_key = toxic_kelp_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_noxious_swamp }
		localization_key = noxious_swamp_singular
	}
	text = {
		trigger = { has_espionage_operation_flag = d_massive_glacier }
		localization_key = massive_glacier_singular
	}
	default = wildlife_blocker_singular
}

defined_text = { # country scope
	name = WildernessGladeProvides
	text = {
		trigger = {
			country_uses_food = yes
			overlord = { is_lithoid = no }
		}
		localization_key = r_food
	}
	text = {
		trigger = {
			country_uses_food = yes
			overlord = { is_lithoid = yes }
		}
		localization_key = r_minerals
	}
	text = {
		trigger = {
			country_uses_food = no
		}
		localization_key = r_energy
	}
}
# Mastery over nature decision description altered for the wilderness
define_text = {
	name = GetMasteryOverNatureDecisionDesc
	text = {
		trigger = {
			owner = {
				is_wilderness_empire = no
			}
		}
		localization_key = decision_mastery_of_nature_desc_normal
	}
	text = {
		trigger = {
			owner = {
				is_wilderness_empire = yes
			}
		}
		localization_key = decision_wilderness_mastery_over_nature_desc
	}
}

#Hanger Status
define_text = {
	name = GetHangerStatus
	text = {
		trigger = {
			any_owned_ship = {
				OR = {
					has_ship_flag = recently_raged
					has_ship_flag = recently_fed
					is_ship_size = behemoth_03
					is_growth_complete = yes
					# also add filled growth bar here
				}
				owner = {
					NOT = {
						has_menace_perk = menp_behemoth_mind_meld
					}
				}
			}
		}
		localization_key = hanger_calm
	}
	text = {
		trigger = {
			any_owned_ship = {
				NOT = {
					has_ship_flag = raging
					has_ship_flag = recently_raged
					has_ship_flag = recently_fed
					is_ship_size = behemoth_03
					is_growth_complete = yes
				}
			}
			owner = {
				NOT = {
					has_menace_perk = menp_behemoth_mind_meld
				}
			}
		}
		localization_key = hanger_agitated
	}
	text = {
		trigger = { any_owned_ship = { has_ship_flag = raging } }
		localization_key = hanger_raging
	}
	text = {
		trigger = {
			owner = { has_menace_perk = menp_behemoth_mind_meld }
		}
		localization_key = hanger_pacified
	}
}

#Behemoth Situation unlocks
define_text = {
	name = GetBehemothEggUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_fast_egg
		}
		localization_key = behemoth_fast_egg_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_slow_egg
		}
		localization_key = behemoth_slow_egg_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_strong_egg
		}
		localization_key = behemoth_strong_egg_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_fast_egg
				has_country_flag = behemoth_slow_egg
				has_country_flag = behemoth_strong_egg
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothMobilityUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_turbo
		}
		localization_key = behemoth_turbo_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_reflexes
		}
		localization_key = behemoth_reflexes_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_jump_design
		}
		localization_key = behemoth_jump_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_cloaking_design
		}
		localization_key = behemoth_cloaking_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_turbo
				has_country_flag = behemoth_reflexes
				has_country_flag = behemoth_jump_design
				has_country_flag = behemoth_cloaking_design
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothTank1Upgrade
	text = {
		trigger = {
			has_country_flag = behemoth_hull_1
		}
		localization_key = behemoth_hull_1_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_armor_1
		}
		localization_key = behemoth_armor_1_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_shield_1
		}
		localization_key = behemoth_shield_1_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_hull_1
				has_country_flag = behemoth_armor_1
				has_country_flag = behemoth_shield_1
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothDamageUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_anti_shield
		}
		localization_key = behemoth_anti_shield_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_anti_armor
		}
		localization_key = behemoth_anti_armor_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_tracking
		}
		localization_key = behemoth_tracking_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_anti_shield
				has_country_flag = behemoth_anti_armor
				has_country_flag = behemoth_tracking
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothDamageAbilityUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_drain
		}
		localization_key = behemoth_drain_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_spike
		}
		localization_key = behemoth_spike_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_burst
		}
		localization_key = behemoth_burst_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_drain
				has_country_flag = behemoth_spike
				has_country_flag = behemoth_burst
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothTank2Upgrade
	text = {
		trigger = {
			has_country_flag = behemoth_hull_2
		}
		localization_key = behemoth_hull_2_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_damage_reduction
		}
		localization_key = behemoth_damage_reduction_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_hardening
		}
		localization_key = behemoth_hardening_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_hull_2
				has_country_flag = behemoth_damage_reduction
				has_country_flag = behemoth_hardening
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothSupportUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_buff
		}
		localization_key = behemoth_buff_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_summon
		}
		localization_key = behemoth_summon_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_healing
		}
		localization_key = behemoth_healing_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_buff
				has_country_flag = behemoth_summon
				has_country_flag = behemoth_healing
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothRoleUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_frenzy
		}
		localization_key = behemoth_frenzy_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_tempered_rage
		}
		localization_key = behemoth_tempered_rage_tt
	}
	text = {
		trigger = {
			has_country_flag = behemoth_inspiration
		}
		localization_key = behemoth_inspiration_tt
	}
	text = {
		trigger = {
			NOR = {
				has_country_flag = behemoth_frenzy
				has_country_flag = behemoth_tempered_rage
				has_country_flag = behemoth_inspiration
			}
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetBehemothUltUpgrade
	text = {
		trigger = {
			has_country_flag = behemoth_superweapon
		}
		localization_key = behemoth_superweapon_tt
	}
	text = {
		trigger = {
			NOT = { has_country_flag = behemoth_superweapon }
		}
		localization_key = BLANK_STRING
	}
}

define_text = {
	name = GetWildernessAssimilation
	text = {
		trigger = {
			exists = owner
			owner = { is_wilderness_empire = yes }
		}
		localization_key = wilderness_assimilation
	}
	default = BLANK_STRING
}

defined_text = {
	name = GetTransferenceVolunteerDrone
	text = {
		trigger = {
			exists = owner
			owner = {
				is_gestalt = yes
				is_wilderness_empire = no
			}
		}
		localization_key = job_transference_drone_plural
	}
	text = {
		trigger = {
			exists = owner
			owner = {
				is_wilderness_empire = yes
			}
		}
		localization_key = job_neurosymbiont_plural
	}
	default = job_transference_volunteer_plural
}
