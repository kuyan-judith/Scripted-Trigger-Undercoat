defined_text = {
	name = GetFleet1DealProduct
	text = {
		trigger = { has_country_flag = fleet1dealproduct1 }
		localization_key = fleet1product1
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct2 }
		localization_key = fleet1product2
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct3 }
		localization_key = fleet1product3
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct4 }
		localization_key = fleet1product4
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct5 }
		localization_key = fleet1product5
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct6 }
		localization_key = fleet1product6
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct7 }
		localization_key = fleet1product7
	}
}

defined_text = {
	name = GetFleet1DealCost
	text = {
		trigger = { has_country_flag = fleet1dealcost1 }
		localization_key = fleet1cost1
	}
	text = {
		trigger = { has_country_flag = fleet1dealcost2 }
		localization_key = fleet1cost2
	}
	text = {
		trigger = { has_country_flag = fleet1dealcost3 }
		localization_key = fleet1cost3
	}
	text = {
		trigger = { has_country_flag = fleet1dealcost4 }
		localization_key = fleet1cost4
	}
	text = {
		trigger = { has_country_flag = fleet1dealcost5 }
		localization_key = fleet1cost5
	}
	text = {
		trigger = { has_country_flag = fleet1dealcost6 }
		localization_key = fleet1cost6
	}
}

defined_text = {
	name = GetFleet1DealProductAddendum
	text = {
		trigger = { has_country_flag = fleet1dealproduct1 }
		localization_key = fleet1product1_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct2 }
		localization_key = fleet1product2_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct3 }
		localization_key = fleet1product3_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct4 }
		localization_key = fleet1product4_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct5 }
		localization_key = fleet1product5_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct6 }
		localization_key = fleet1product6_addendum
	}
	text = {
		trigger = { has_country_flag = fleet1dealproduct7 }
		localization_key = fleet1product7_addendum
	}
}

#Fleet 3
defined_text = { #Buying Food
	name = GetFleet3ScaledCostDeal1
	text = {
		trigger = {
			has_country_flag = fleet3deal1cost1
		}
		localization_key = fleet3deal1cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal1cost2
		}
		localization_key = fleet3deal1cost2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal1cost3
		}
		localization_key = fleet3deal1cost3
	}
}

defined_text = { #Selling Minerals
	name = GetFleet3ScaledProductDeal1
	text = {
		trigger = {
			has_country_flag = fleet3deal1product1
		}
		localization_key = fleet3deal1product1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal1product2
		}
		localization_key = fleet3deal1product2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal1product3
		}
		localization_key = fleet3deal1product3
	}
}

defined_text = { #Buying Energy/Food/Luxury Goods
	name = GetFleet3CostDeal2
	text = {
		trigger = {
			has_country_flag = fleet3deal2cost1
		}
		localization_key = fleet3deal2cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal2cost2
		}
		localization_key = fleet3deal2cost2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal2cost3
		}
		localization_key = fleet3deal2cost3
	}
}

defined_text = { #Selling Engineers/Governor
	name = GetFleet3ProductDeal2
	text = {
		trigger = {
			has_country_flag = fleet3deal2product1
		}
		localization_key = fleet3deal2product1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal2product2
		}
		localization_key = fleet3deal2product2
	}
}

defined_text = { #Buying Dark Matter/Rare Crystals/Zro Dust
	name = GetFleet3CostDeal4
	text = {
		trigger = {
			has_country_flag = fleet3deal4cost1
		}
		localization_key = fleet3deal4cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal4cost2
		}
		localization_key = fleet3deal4cost2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal4cost3
		}
		localization_key = fleet3deal4cost3
	}
}

defined_text = { #Selling Alloy/Exotic Gases/Living Metal
	name = GetFleet3ProductDeal4
	text = {
		trigger = {
			has_country_flag = fleet3deal4product1
		}
		localization_key = fleet3deal4product1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal4product2
		}
		localization_key = fleet3deal4product2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal4product3
		}
		localization_key = fleet3deal4product3
	}
}

defined_text = { #Buying Energy/Minerals/Luxury Goods
	name = GetFleet3CostDeal6
	text = {
		trigger = {
			has_country_flag = fleet3deal6cost1
		}
		localization_key = fleet3deal6cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal6cost2
		}
		localization_key = fleet3deal6cost2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal6cost3
		}
		localization_key = fleet3deal6cost3
	}
}

defined_text = { #Buying Energy/Minerals/Luxury Goods
	name = GetFleet3CostDeal7
	text = {
		trigger = {
			has_country_flag = fleet3deal7cost1
		}
		localization_key = fleet3deal7cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal7cost2
		}
		localization_key = fleet3deal7cost2
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal7cost3
		}
		localization_key = fleet3deal7cost3
	}
}

defined_text = { #Buying Goods/Influence
	name = GetFleet3CostDeal8
	text = {
		trigger = {
			has_country_flag = fleet3deal8cost1
		}
		localization_key = fleet3deal8cost1
	}
	text = {
		trigger = {
			has_country_flag = fleet3deal8cost2
		}
		localization_key = fleet3deal8cost2
	}
}


#### For modifiers
# e.g. mod_planet_technician_energy_produces_mult:1 "£energy£ $energy$ from £job_technician£ [GetTechnicianPlural]"
# Used to make them say which job gets the bonus correctly where the same modifier applies to
# several equivalent jobs, such as Technicians and Technician Drones.
# Needs the scope valid checks and default fallback for e.g. galaxy setup, observer mode.

# Worker / Simple Drone
defined_text = {
	name = GetWorker
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_worker
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_simple_drone
	}
	default = pop_cat_worker
}

# Specialist / Complex Drone
defined_text = {
	name = GetSpecialist
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = pop_cat_specialist
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = pop_cat_complex_drone
	}
	default = pop_cat_specialist
}

# Technician / Technician Drone
defined_text = {
	name = GetTechnician
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_technician
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_technician_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_photosymbiont
	}
	default = job_technician
}

# Technicians / Technician Drones
defined_text = {
	name = GetTechnicianPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_technician_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_technician_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_photosymbiont_plural
	}
	default = job_technician_plural
}

# Miner / Mining Drone
defined_text = {
	name = GetMiner
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_miner
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_mining_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_grubsymbiont
	}
	default = job_miner
}

# Miners / Mining Drones
defined_text = {
	name = GetMinerPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_miner_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_mining_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_grubsymbiont_plural
	}
	default = job_miner_plural
}

# Farmer / Farming Drone
defined_text = {
	name = GetFarmer
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_anglers_empire = no
		}
		localization_key = job_farmer
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_agri_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_pollinosymbiont
	}
	default = job_farmer
}

# Farmers / Farming Drones
defined_text = {
	name = GetFarmerPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_anglers_empire = no
		}
		localization_key = job_farmer_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_agri_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_pollinosymbiont_plural
	}
	default = job_farmer_plural
}

# Soldier / Warrior Drone
defined_text = {
	name = GetSoldier
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_soldier
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_warrior_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_tamersymbiont
	}
	default = job_soldier
}

# Soldiers / Warrior Drones
defined_text = {
	name = GetSoldierPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_soldier_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_warrior_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_tamersymbiont_plural
	}
	default = job_soldier_plural
}

# Soldier Jobs Add / Warrior Drone Jobs Add
defined_text = {
	name = GetSoldierJobsAdd
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = mod_job_soldier_add
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = mod_job_warrior_drone_add
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = mod_job_tamersymbiont_add
	}
	default = mod_job_soldier_add
}

# Chemists / Chemists Drones
defined_text = {
	name = GetChemistPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_chemist_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_chemist_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_motesymbiote_plural
	}
	default = job_chemist_plural
}

# Refiners / Refiners Drones
defined_text = {
	name = GetRefinerPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_gas_refiner_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_gas_refiner_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_gaseosymbiote_plural
	}
	default = job_gas_refiner_plural
}

# Translucers / Translucers Drones
defined_text = {
	name = GetTranslucerPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_translucer_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_wilderness_empire = no
		}
		localization_key = job_translucer_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_crystalsymbiote_plural
	}
	default = job_translucer_plural
}

# Metallurgist / others
defined_text = {
	name = GetAlloyProducer
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_foundry
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_technician
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_fabricator
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_catalytic_empire = no
			is_wilderness_empire = no
		}
		localization_key = job_alloy_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_forgesymbiont
	}
	default = job_foundry
}

# Metallurgist / others
defined_text = {
	name = GetAlloyProducerPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_foundry_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_technician_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
			is_catalytic_empire = no
		}
		localization_key = job_fabricator_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
			is_catalytic_empire = no
		}
		localization_key = job_alloy_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
			is_catalytic_empire = yes
		}
		localization_key = job_catalytic_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_forgesymbiont_plural
	}
	default = job_foundry_plural
}

# Researcher / others
defined_text = {
	name = GetResearcher
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_researcher
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_brain_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_evosymbiont
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_calculator
	}
	default = job_researcher
}

# Researchers / others
defined_text = {
	name = GetResearcherPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_researcher_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_brain_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_evosymbiont_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_calculator_plural
	}
	default = job_researcher_plural
}

defined_text = {
	name = GetResearcherPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_researcher_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_brain_drone_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_evosymbiont_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_calculator_plural_with_icon
	}
	default = job_researcher_plural_with_icon
}

# Astral Researcher / others
defined_text = {
	name = GetAstralResearcherJobWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_astral_researcher_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_astral_drone_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_astral_unit_with_icon
	}
	default = job_astral_researcher_with_icon
}

defined_text = {
	name = GetAstralResearcherEffect
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_astral_researcher_effect_desc
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
		}
		localization_key = job_astral_drone_effect_desc
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_astral_unit_effect_desc
	}
	default = job_astral_researcher_effect_desc
}

# Artisan / others
defined_text = {
	name = GetArtisan
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_crafter_empire = no
		}
		localization_key = job_artisan
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = yes
		}
		localization_key = job_artificer
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_artisan_drone
	}
	default = job_artisan
}

# Priest / Death Priest (also used for the key in £job_priest£)
defined_text = {
	name = GetArtisanIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = no
		}
		localization_key = job_artisan_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = yes
		}
		localization_key = job_artificer_icon
	}
	default = job_artisan_icon
}

# Artisan / others
defined_text = {
	name = GetArtisanPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_crafter_empire = no
		}
		localization_key = job_artisan_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_crafter_empire = yes
		}
		localization_key = job_artificer_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = yes
		}
		localization_key = job_artisan_drone_plural
	}
	default = job_artisan_plural
}

# Priest / Death Priest
defined_text = {
	name = GetPriest
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = no
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_preacher
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = no
			is_death_cult_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_death_priest
	}
	text = {
		trigger = {
			is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_haruspex
	}
	default = job_priest
}

# Priests / Death Priests
defined_text = {
	name = GetPriestPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = no
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_priest_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_preacher_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_death_cult_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_death_priest_plural
	}
	text = {
		trigger = {
			is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_haruspex_plural
	}
	default = job_priest
}

# Priest / Death Priest (also used for the key in £job_priest£)
defined_text = {
	name = GetPriestIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = no
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_priest_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_megacorp = yes
			NOR = {
				is_death_cult_empire = yes # undercoat: moved to scripted trigger
				
				is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_preacher_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_death_cult_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_death_priest_icon
	}
	text = {
		trigger = {
			is_cybernetic_creed_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_haruspex_icon
	}
	default = job_priest_icon
}

# Priest / Death Priest / Bureaucrat etc
defined_text = {
	name = GetBureaucrat
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = yes
			is_worker_coop_empire = no
		}
		localization_key = job_priest
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = no
			is_megacorp = yes
			is_worker_coop_empire = no
		}
		localization_key = job_manager
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_spiritualist = no
			is_megacorp = yes
			is_worker_coop_empire = yes
		}
		localization_key = job_steward
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_gestalt = no
			is_spiritualist = no
			is_megacorp = no
		}
		localization_key = job_bureaucrat
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_synapse_drone
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_choirsymbiont
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator
	}
	default = job_bureaucrat
}

# Priest / Death Priest / Bureaucrat etc
defined_text = {
	name = GetBureaucratWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_synapse_drone_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_choirsymbiont_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator_with_icon
	}
	default = job_bureaucrat_with_icon
}

# Priests / Death Priests / Bureaucrats etc
defined_text = {
	name = GetBureaucratPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_synapse_drone_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_choirsymbiont_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator_plural_with_icon
	}
	default = job_bureaucrat_plural_with_icon
}

defined_text = {
	name = GetBureaucratPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_wilderness_empire = no
		}
		localization_key = job_synapse_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_choirsymbiont_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_coordinator_plural
	}
	default = job_bureaucrat_plural
}

defined_text = {
	name = GetCivilianSpiMatOutput
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_spiritualist = yes }
		}
		localization_key = CIVILIAN_OUTPUT_SPI
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_materialist = yes }
		}
		localization_key = CIVILIAN_OUTPUT_MAT
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = {
				is_spiritualist = no
				is_materialist = no
			}
		}
		localization_key = CIVILIAN_OUTPUT_BLANK
	}
	default = CIVILIAN_OUTPUT_BLANK
}

defined_text = {
	name = GetCivilianEgalAuthOutput
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_egalitarian = yes }
		}
		localization_key = CIVILIAN_OUTPUT_EGAL
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_authoritarian = yes }
		}
		localization_key = CIVILIAN_OUTPUT_AUTH
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = {
				is_egalitarian = no
				is_authoritarian = no
			}
		}
		localization_key = CIVILIAN_OUTPUT_BLANK
	}
	default = CIVILIAN_OUTPUT_BLANK
}

defined_text = {
	name = GetCivilianMilPacOutput
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_militarist = yes }
		}
		localization_key = CIVILIAN_OUTPUT_MIL
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_pacifist = yes }
		}
		localization_key = CIVILIAN_OUTPUT_PAC
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = {
				is_militarist = no
				is_pacifist = no
			}
		}
		localization_key = CIVILIAN_OUTPUT_BLANK
	}
	default = CIVILIAN_OUTPUT_BLANK
}

defined_text = {
	name = GetCivilianXenoOutput
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_xenophobe = yes }
		}
		localization_key = CIVILIAN_OUTPUT_PHOB
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_xenophile = yes }
		}
		localization_key = CIVILIAN_OUTPUT_PHIL
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = {
				is_xenophobe = no
				is_xenophile = no
			}
		}
		localization_key = CIVILIAN_OUTPUT_BLANK
	}
	default = CIVILIAN_OUTPUT_BLANK
}

# Culture Worker/Bio-Troph
defined_text = {
	name = GetCultureWorkerPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
		}
		localization_key = job_culture_worker_name_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
			is_servitor_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_bio_trophy_name_plural_with_icon
	}
	default = job_culture_worker_name_plural_with_icon
}

# Fauna/Beast
defined_text = {
	name = GetZooAnimalsWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			has_warrior_culture = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_zoo_beast_name_plural_with_icon
	}
	default = job_zoo_animal_name_plural_with_icon
}

# Entertainer/Duelist
defined_text = {
	name = GetEntertainerPluralWithIcon
	text = {
		trigger = {
			has_warrior_culture = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_duelist_name_plural_with_icon
	}
	default = job_entertainer_plural_with_icon
}

# Entertainer/Duelist
defined_text = {
	name = GetAthletePlural
	text = {
		trigger = {
			has_warrior_culture = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_duelist_plural
	}
	default = athlete_plural
}

defined_text = {
	name = GetCatalyticMineralsOrFood
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_catalytic_empire = yes }
		}
		localization_key = r_food
	}
	text = {
		trigger = {
			is_scope_valid = yes
			owner = { is_catalytic_empire = no }
		}
		localization_key = r_minerals
	}
	default = r_minerals
}

# Corporate Ruler Jobs: Executive (standard) / Steward (Worker Coop)
defined_text = {
	name = GetCorpRulerJob
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = no
		}
		localization_key = job_executive
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = yes
		}
		localization_key = job_steward
	}
}
defined_text = {
	name = GetCorpRulerJobPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = no
		}
		localization_key = job_executive_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = yes
		}
		localization_key = job_steward_plural
	}
}
defined_text = {
	name = GetCorpRulerJobIcon
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = no
		}
		localization_key = job_executive_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_worker_coop_empire = yes
		}
		localization_key = job_steward_with_icon
	}
}

# Roboticists/Replicators/Spawning Drones/Offspring Drones
defined_text = {
	name = GetPopAssemblersPlural
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			NOR = {
				has_country_flag = identity_complex_available
				has_country_flag = augmentation_center_available
				is_augmentation_bazaars_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_roboticist_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_individual_machine = no
			has_country_flag = identity_complex_available
		}
		localization_key = job_roboticist_plural_and_job_identity_designer_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_replicator_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_progenitor_hive_empire = no # undercoat: moved to scripted trigger
			is_wilderness_empire = no
		}
		localization_key = job_spawning_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_progenitor_hive_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_offspring_drone_plural
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire= yes
		}
		localization_key = job_broodsymbiont_plural
	}
	default = job_roboticist_plural
}

# Roboticists/Replicators/Spawning Drones/Offspring Drones
defined_text = {
	name = GetPopAssemblersPluralWithIcon
	text = {
		trigger = {
			is_scope_valid = yes
			OR = {
				is_regular_empire = yes
				is_individual_machine = yes
			}
			NOR = {
				has_country_flag = identity_complex_available
				has_country_flag = augmentation_center_available
				is_augmentation_bazaars_empire = yes # undercoat: moved to scripted trigger
			}
		}
		localization_key = job_roboticist_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_regular_empire = yes
			is_individual_machine = no
			has_country_flag = identity_complex_available
		}
		localization_key = job_roboticist_plural_with_icon_and_job_identity_designer_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_machine_empire = yes
		}
		localization_key = job_replicator_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_progenitor_hive_empire = no # undercoat: moved to scripted trigger
			is_wilderness_empire = no
		}
		localization_key = job_spawning_drone_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_hive_empire = yes
			is_progenitor_hive_empire = yes # undercoat: moved to scripted trigger
		}
		localization_key = job_offspring_drone_plural_with_icon
	}
	text = {
		trigger = {
			is_scope_valid = yes
			is_wilderness_empire = yes
		}
		localization_key = job_broodsymbiont_plural_with_icon
	}
	default = job_roboticist_plural_with_icon
}
