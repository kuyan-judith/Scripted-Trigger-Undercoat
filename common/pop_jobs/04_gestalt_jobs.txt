###################
# Gestalt Jobs
###################
spawning_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_spawning_pool

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			can_assemble_hive_pop = yes
		}
		modifier = {
			planet_pop_assembly_organic_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_necrophage_empire = yes }
			exists = planet.growing_species
			planet.growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		modifier = {
			pop_growth_speed = 0.1
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 5
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 5
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

offspring_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_offspring_nest
	icon = spawning_drone
	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	planet_modifier = {
		planet_jobs_simple_drone_produces_mult = 0.1

	}

	triggered_planet_modifier = {
		potential = {
			can_assemble_hive_pop = yes
		}
		modifier = {
			planet_pop_assembly_organic_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_necrophage_empire = yes }
			exists = planet.growing_species
			planet.growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		modifier = {
			pop_growth_speed = 0.1
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 5
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 5
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

cyber_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_spawning_pool
	icon = machine_nurse

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			can_assemble_cyborg_pop = yes
			can_assemble_hive_pop = yes
		}
		modifier = {
			planet_pop_assembly_organic_add = 1.5
		}
	}

	resources = {
		category = planet_pop_assemblers
		upkeep = {
			alloys = 1
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

replicator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_robot_assembly_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	planet_modifier = {
		planet_pop_assembly_add = 1
	}

	resources = {
		category = planet_pop_assemblers
		upkeep = {
			alloys = 1
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

crucible_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_clinic
	icon = healthcare

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	planet_modifier = {
		pop_growth_speed = 0.25
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	resources = {
		category = planet_doctors
		upkeep = {
			alloys = 2
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = growing_species
					growing_species = {
						is_lithoid = no
						has_trait = trait_cybernetic
					}
				}
			}
			food = 10
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = growing_species
					growing_species = {
						is_lithoid = yes
						has_trait = trait_cybernetic
					}
				}
			}
			minerals = 10
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

coordinator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_machine_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_machine }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|coordinator|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

evaluator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_simulation_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			planet_crime_no_happiness_add = -3
		}
	}

	triggered_planet_modifier = {
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|evaluator|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

synapse_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_hive_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 2
			energy = 2
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
			energy = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_hivemind }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|synapse_drone|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

brain_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 4
			engineering_research = 4
			society_research = 4
		}
		upkeep = {
			minerals = 6
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			minerals = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 2
			engineering_research = 2
			society_research = 2
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|brain_drone|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

calculator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 4
			engineering_research = 4
			society_research = 4
		}
		upkeep = {
			energy = 4
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			energy = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 2
			engineering_research = 2
			society_research = 2
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|calculator|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

artisan_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_organic_sanctuary

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 10
		}

		upkeep = {
			minerals = 10
		}

		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
					exists = owner.overlord
					owner.overlord = { is_gestalt = no }
				}
			}
			consumer_goods = @requisitorium_consumer_goods_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|artisan_drone|RESOURCE|consumer_goods|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			OR = {
				has_job = artisan_drone
				AND = {
					exists = owner
					owner = { has_deficit = consumer_goods }
				}
			}
		}
	}
}

fabricator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}
		upkeep = {
			minerals = 8
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|fabricator|RESOURCE|alloys|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

alloy_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3
		}

		upkeep = {
			minerals = 6
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|alloy_drone|RESOURCE|alloys|
	}
}

catalytic_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3.75
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			alloys = 1.25
		}

		upkeep = {
			food = 9
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			food = 3
		}

		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_reduction
		}

		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			food = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			alloys = @requisitorium_alloys_overlord
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|catalytic_drone|RESOURCE|alloys|
	}
}

chemist_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_chemical_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_chemists
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			volatile_motes = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			volatile_motes = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|chemist_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

translucer_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_crystal_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_translucers
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			rare_crystals = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			rare_crystals = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|translucer_drone|RESOURCE|rare_crystals|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

gas_refiner_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_refinery

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_refiners
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			exotic_gases = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			exotic_gases = 2.5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = no
				}
			}
			minerals = 10
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_catalytic_empire = yes
				}
			}
			food = 15
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|gas_refiner_drone|RESOURCE|exotic_gases|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

patrol_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_jobs
		produces = {
			unity = 1
		}
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -20
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|patrol_drone|RESOURCE|unity|FACTOR|0.25|
		modifier = {
			factor = 50
			planet = { planet_crime > 22 }
		}
		modifier = {
			weight = 20
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 3
			has_trait = trait_resilient
		}
		modifier = {
			factor = 3
			planet = { planet_crime > 0 }
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 2
			planet = { planet_crime > 0 }
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
	}
}

crystal_mining_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_crystal_mines

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_sr_miners
		produces = {
			rare_crystals = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|crystal_mining_drone|RESOURCE|rare_crystals|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

mote_harvesting_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mote_harvesting_traps

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_sr_miners
		produces = {
			volatile_motes = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|mote_harvesting_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

gas_extraction_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_gas_extractors

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_sr_miners
		produces = {
			exotic_gases = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|gas_extraction_drone|RESOURCE|exotic_gases|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

mining_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mineral_purification_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 4
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = @requisitorium_minerals_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_minerals
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_material_requisitorium
				}
			}
			minerals = @requisitorium_minerals_overlord
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|mining_drone|RESOURCE|minerals|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.2
			has_job = mining_drone
		}
		modifier = {
			factor = 0.9
			NOT = { has_job = mining_drone }
			owner = {
				has_monthly_income = {
					resource = minerals
					value > 85
				}
			}
		}
	}
}

agri_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_food_processing_facility

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_farmers
		produces = {
			food = 6
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
					is_catalytic_empire = no
				}
			}
			food = -1
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_food
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_produce_requisitorium
				}
			}
			food = @requisitorium_food_overlord
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|agri_drone|RESOURCE|food|
		modifier = {
			factor = 0.9
			NOT = { has_job = agri_drone }
			owner = {
				has_monthly_income = {
					resource = food
					value > 50
				}
			}
		}
		modifier = {
			factor = 1.2
			has_job = agri_drone
		}
		modifier = {
			factor = 0.9
			owner = {
				is_robot_empire = yes
			}
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}

		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}
	}
}

technician_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_energy_grid

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_technician
		produces = {
			energy = 6
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			energy = 2
		}
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_energy_requisitorium
				}
			}
			energy = @requisitorium_energy_reduction
		}
	}

	overlord_resources = {
		category = planet_requisitioned_energy
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_energy_requisitorium
				}
			}
			energy = @requisitorium_energy_overlord
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|technician_drone|RESOURCE|energy|
		modifier = {
			factor = 0.9
			NOT = { has_job = technician_drone }
			owner = {
				has_monthly_income = {
					resource = energy
					value > 50
				}
			}
		}
		modifier = {
			factor = 1.2
			has_job = technician_drone
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}

maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_maintenance_protocols = yes
				}
			}
			unity = 1
		}
	}

	possible_precalc = can_fill_drone_job

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			owner = { has_active_tradition = tr_versatility_finish }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet.orbital_defence
			planet.orbital_defence = {
				exists = starbase
				starbase = {
					has_starbase_building = ring_maintenance_hub
				}
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				is_ringworld = yes
				has_building = building_alpha_hub
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @maintenance_drone_job
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			mult = value:job_weights_modifier|JOB|maintenance_drone|RESOURCE|unity|FACTOR|0.25|
			exists = owner
			owner = {
				has_maintenance_protocols = yes
			}
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			NOT = { has_job = maintenance_drone }
			planet = {
				free_amenities < 3
			}
		}

		modifier = {
			factor = 1000 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			has_job = maintenance_drone
			planet = {
				free_amenities < 8
			}
		}
	}
}

warrior_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	country_modifier = {
		country_naval_cap_add = 4
	}
	resources = {
		category = planet_soldiers
	}

	triggered_country_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = { has_technology = "tech_ground_defense_planning" }
			}
		}
		modifier = {
			country_naval_cap_add = 2
		}
	}

	pop_modifier = {
		pop_defense_armies_add = 3
	}


	triggered_planet_modifier = {
		modifier = {
			planet_stability_add = 1
		}
		mult = planet.modifier:job_soldier_stability_add
	}

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	weight = {
		weight = 5
		modifier = {
			weight = 100
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 10
			planet = {
				exists = leader
				leader = {
					leader_class = commander
				}
			}
		}
		modifier = {
			factor = 4
			has_trait = trait_resilient
		}
		modifier = {
			factor = 4
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 3
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 0
			planet = { num_pops < 12 }
			owner = { is_ai = yes }
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.2
			has_trait = trait_cybernetic
		}
	}
}

bluelotus_drone = {
	category = complex_drone
	is_capped_by_modifier = yes
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_illicit_research_labs
	icon = foundry

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}

		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			energy = @living_standard_energy_normal
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|bluelotus_drone|RESOURCE|alloys|
	}
}

chronicle_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_galactic_memorial_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			minerals = 1
			energy = 2
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			energy = 1
			food = 2
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			energy = 1
			food = 1
		}
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = 1
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
			}
			energy = 1
			minerals = 2
		}
	}

	planet_modifier = {
		planet_stability_add = 2.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			planet_crime_no_happiness_add = -3
		}
	}

	triggered_planet_modifier = {
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|chronicle_drone|RESOURCE1|unity|WEIGHT1|0.7|RESOURCE2|society_research|WEIGHT2|0.3|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

scrap_miner_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mineral_purification_plant
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 2
			alloys = 1
		}
	}

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|scrap_miner_drone|RESOURCE1|minerals|WEIGHT1|0.7|RESOURCE2|alloys|WEIGHT2|0.3|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 1.2
			has_job = scrap_miner_drone
		}
		modifier = {
			factor = 0.9
			NOT = { has_job = scrap_miner_drone }
			owner = {
				has_monthly_income = {
					resource = minerals
					value > 85
				}
			}
		}
	}
}

bath_attendant_hive = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_toxic_bath

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		planet_pop_assembly_organic_mult = 0.015
		pop_environment_tolerance = -0.0075
		mult = planet.value:toxic_attendant_growth
	}

	resources = {
		category = planet_bath_attendants_hive
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 4
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

bath_attendant_machine = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_toxic_bath

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		planet_pop_assembly_mult = 0.01
		pop_amenities_usage_mult = 0.01
		mult = planet.value:toxic_attendant_growth
	}


	resources = {
		category = planet_bath_attendants_machine
		upkeep = {
			minerals = 4
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

archaeo_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_archaeostudies_faculty

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 2
			engineering_research = 2
			society_research = 5
		}
		produces = {
			trigger = { planet = { is_relic_world = yes } }
			minor_artifacts = 0.3
		}
		upkeep = {
			minerals = 6
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			minerals = 3
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|archaeo_drone|
	}
}

archaeo_unit = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_archaeostudies_faculty

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 2
			engineering_research = 2
			society_research = 5
		}
		produces = {
			trigger = { planet = { is_relic_world = yes } }
			minor_artifacts = 0.3
		}
		upkeep = {
			energy = 4
		}
		upkeep = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			energy = 2
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				planet = {
					has_planet_flag = has_science_ministry
				}
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
	}

	triggered_country_modifier = {
		modifier = {
			country_naval_cap_add = 1
		}
		mult = planet.modifier:job_researcher_naval_cap_add
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|archaeo_unit|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { is_machine_assimilator = yes }
			has_trait = trait_cybernetic
		}
	}
}
