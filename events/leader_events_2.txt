############################
#
# Leader Events
#
############################

namespace = leader

# Fired by on_added_to_leader_pool
# A leader is added to the leader pool, available for recruitment
# scope: country, from: leader
# Add traits from civics
country_event = {
	id = leader.100
	hide_window = yes

	is_triggered_only = yes


	trigger = {
		NOT = { has_country_flag = spawning_renowned_leader }
	}

	immediate = {

		# Champions of the Empire
		# Adds a random common trait
		if = {
			limit = {
				has_tradition = tr_aptitude_champions_of_the_empire
			}
			from = {
				add_trait_no_notify = "random_common"
			}
		}

		# Aristocratic Elite
		# 20% Chance for a random positive trait and a random negative trait
		if = {
			limit = {
				is_aristocratic_empire = yes # undercoat: moved to scripted trigger
			}
			from = {
				random_list = {
					80 = {  }
					20 = {
						add_trait_no_notify = "random_common"
						add_trait_no_notify = "random_negative"
						# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
						change_background_job = noble
					}
				}
			}
		}

		# Technocracy
		# Adds a random expertise trait
		if = {
			limit = {
				is_technocracy = yes # undercoat: moved to scripted trigger
				from = { leader_class = scientist }
			}
			from = {
				add_random_expertise_trait_effect = yes
			}
		}

		# Crusader Spirit
		# Adds the Crusader trait
		if = {
			limit = {
				has_crusader_spirit = yes # undercoat: moved to scripted trigger
				from = { leader_class = commander }
			}
			from = {
				add_trait_no_notify = leader_trait_crusader
			}
		}

		# Letters of Marque
		# Adds the Corsair trait
		if = {
			limit = {
				is_privateer_empire = yes # undercoat: moved to scripted trigger
				from = { leader_class = commander }
			}
			from = {
				add_trait_no_notify = leader_trait_corsair
			}
		}
	}
}

# Fired by on_game_start_country
# scope: country
# Add traits from civics
country_event = {
	id = leader.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		# Aristocratic Elite
		# 20% Chance for a random positive trait and a random negative trait
		if = {
			limit = {
				is_aristocratic_empire = yes # undercoat: moved to scripted trigger
			}
			every_owned_leader = {
				random_list = {
					80 = {  }
					20 = {
						add_trait_no_notify = "random_common"
						add_trait_no_notify = "random_negative"
						# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
						change_background_job = noble
					}
				}
			}
		}

		# Remnants
		# Adds a Archaeostudies Expertise trait
		if = {
			limit = {
				has_ancrel = yes
				is_remnants_empire = yes # undercoat: moved to scripted trigger
			}
			every_owned_leader = {
				limit = {
					leader_class = scientist
					OR = {
						is_councilor_type = councilor_research
						is_councilor_type = councilor_gestalt_cognitive
					}
				}
				add_trait_no_notify = leader_trait_expertise_archaeostudies
			}
		}


		# Technocracy
		# Adds a random Expertise trait
		if = {
			limit = {
				is_technocracy = yes # undercoat: moved to scripted trigger
			}
			every_owned_leader = {
				limit = {
					leader_class = scientist
				}
				add_random_expertise_trait_effect = yes
			}
		}

		# Crusader Spirit
		# Adds the Crusader trait
		if = {
			limit = {
				has_crusader_spirit = yes # undercoat: moved to scripted trigger
			}
			every_owned_leader = {
				limit = {
					leader_class = commander
				}
				add_trait_no_notify = leader_trait_crusader
			}
		}

		# Letters of Marque
		# Adds the Corsair trait
		if = {
			limit = { is_privateer_empire = yes } # undercoat: moved to scripted trigger
			every_owned_leader = {
				limit = {
					leader_class = commander
				}
				add_trait_no_notify = leader_trait_corsair
			}
		}
	}
}

# New heir appointed
leader_event = {
	id = leader.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		# Set age to be younger than normal.
		set_variable_to_random_value = {
			which = heir_age_mod
			min = -10
			max = 0
			rounded = yes
		}
		add_age = heir_age_mod

		####################
		# CLASS RANDOMISER #
		####################

		# Set skill level to 1
		set_skill = 1
		# Add generic level modifiers
		add_skill_without_trait_selection = owner.modifier:leader_initial_skill

		if = {
			limit = {
				owner = {
					OR = {
						# Commander
						is_privateer_empire = yes # undercoat: moved to scripted trigger
						has_tradition = tr_supremacy_war_games
						has_valid_civic = civic_distinguished_admiralty
						has_crusader_spirit = yes # undercoat: moved to scripted trigger
						# Official
						is_aristocratic_empire = yes # undercoat: moved to scripted trigger
						has_tradition = tr_domination_colonial_viceroys
						# Scientist
						is_technocracy = yes # undercoat: moved to scripted trigger
						has_tradition = tr_discovery_science_division
						# Current Ruler's Class
						has_philosopher_king = yes # undercoat: moved to scripted trigger
					}
				}
			}

			# All classes have a base weight of 10.
			# Civics that boost only one class add 40.
			# Civics that boost two classes add 20 to each class.
			# Traditions that boost a class add 20.

			random_list = {
				# Commander
				0 = {
					modifier = {
						add = value:heir_class_weight_commander
					}
					change_leader_class = commander
					add_skill_without_trait_selection = owner.modifier:commander_initial_skill
				}
				# Official
				0 = {
					modifier = {
						add = value:heir_class_weight_official
					}
					change_leader_class = official
					add_skill_without_trait_selection = owner.modifier:official_initial_skill
				}
				# Scientist
				0 = {
					modifier = {
						add = value:heir_class_weight_scientist
					}
					change_leader_class = scientist
					add_skill_without_trait_selection = owner.modifier:scientist_initial_skill
				}
			}
		}

		##########
		# TRAITS #
		##########

		# Initial Traits, set after determining class.
		add_trait_no_notify = trait_imperial_heir
		add_trait_no_notify = "random_common"

		# Chance for a negative trait.
		random_list = {
			95 = { }
			5 = {
				add_trait_no_notify = "random_common"
				add_trait_no_notify = "random_negative"
				# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Checked now made in paragon_2.2200.
				modifier = {
					factor = 0
					owner = { has_philosopher_king = yes } # undercoat: moved to scripted trigger
				}
			}
		}

		# Under One Rule
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_legendary_leader_imperial
						ruler = { has_trait = leader_trait_legendary_offspring }
					}
				}
			}
			add_trait_no_notify = leader_trait_legendary_offspring
		}

		# Technocracy
		if = {
			limit = {
				owner = {
					is_technocracy = yes # undercoat: moved to scripted trigger
				}
				leader_class = scientist
			}
			add_random_expertise_trait_effect = yes
		}

		# Crusader Spirit
		if = {
			limit = {
				owner = {
					has_crusader_spirit = yes # undercoat: moved to scripted trigger
				}
				leader_class = commander
			}
			add_trait_no_notify = leader_trait_crusader
		}

		# Letters of Marque
		if = {
			limit = {
				owner = {
					is_privateer_empire = yes # undercoat: moved to scripted trigger
				}
				leader_class = commander
			}
			add_trait_no_notify = leader_trait_corsair
		}
	}
}

# Add Imperial Ruler trait on changing to Imperial authority.
country_event = {
	id = leader.201
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_playable = yes # undercoat: moved to scripted trigger
		has_authority_imperial = yes # undercoat: moved to scripted trigger
		exists = ruler
	}

	immediate = {
		ruler = {
			if = {
				limit = {
					NOT = { has_trait = trait_imperial_heir }
				}
				add_trait = trait_imperial_heir
			}
		}
	}
}

#Fired by on_monthly_pulse_country
# Favors from leader_trait_ambassador_favor_maker
country_event = {
	id = leader.300
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_tier1or2or3_in_council = {
			TRAIT = leader_trait_ambassador_favor_maker
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				is_councilor = yes
				has_trait = leader_trait_ambassador_favor_maker
			}
			root = {
				every_envoy = {
					limit = {
						has_envoy_task = { task = improve_relations }
						root = {
							num_favors = {
								target = prev.envoy_location_country
								value < 10
							}
						}
					}
					random_list = {
						25 = {
							root = {
								add_favors = {
									target = prev.envoy_location_country
									value = 1
								}
								create_message = {
									type = MESSAGE_FAVOR_GAINED_TRADITION
									localization = MESSAGE_FAVOR_GAINED_TRADITION_DESC
									days = 30
									target = prev.envoy_location_country.capital_scope
									variable = {
										type = name
										localization = WHO
										scope = prev.envoy_location_country
									}
								}
							}
						}
						9975 = {}
					}
				}
			}

		}
		every_owned_leader = {
			limit = {
				is_councilor = yes
				has_trait = leader_trait_ambassador_favor_maker_2
			}
			root = {
				every_envoy = {
					limit = {
						has_envoy_task = { task = improve_relations }
						root = {
							num_favors = {
								target = prev.envoy_location_country
								value < 10
							}
						}
					}
					random_list = {
						50 = {
							root = {
								add_favors = {
									target = prev.envoy_location_country
									value = 1
								}
								create_message = {
									type = MESSAGE_FAVOR_GAINED_TRADITION
									localization = MESSAGE_FAVOR_GAINED_TRADITION_DESC
									days = 30
									target = prev.envoy_location_country.capital_scope
									variable = {
										type = name
										localization = WHO
										scope = prev.envoy_location_country
									}
								}
							}
						}
						9950 = {}
					}
				}
			}

		}
		every_owned_leader = {
			limit = {
				is_councilor = yes
				has_trait = leader_trait_ambassador_favor_maker_2
			}
			root = {
				every_envoy = {
					limit = {
						has_envoy_task = { task = improve_relations }
						root = {
							num_favors = {
								target = prev.envoy_location_country
								value < 10
							}
						}
					}
					random_list = {
						100 = {
							root = {
								add_favors = {
									target = prev.envoy_location_country
									value = 1
								}
								create_message = {
									type = MESSAGE_FAVOR_GAINED_TRADITION
									localization = MESSAGE_FAVOR_GAINED_TRADITION_DESC
									days = 30
									target = prev.envoy_location_country.capital_scope
									variable = {
										type = name
										localization = WHO
										scope = prev.envoy_location_country
									}
								}
							}
						}
						9900 = {}
					}
				}
			}
		}
	}
}

country_event = { # Mutual Support
	id = leader.310

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galcom_member = {
			limit = {
				position_on_last_resolution = support
				any_owned_leader = {
					has_trait = leader_trait_supporting_voter
					is_assigned_to_galcom = yes
				}
				NOT = {
					is_same_value = root
				}
			}
			random_owned_leader = {
				limit = {
					has_trait = leader_trait_supporting_voter
					is_assigned_to_galcom = yes
				}
				save_event_target_as = galcom_delegate
			}
			add_favors = {
				target = prev
				value = 1
			}
			root = {
				add_trust = {
					amount = 5
					who = prev
				}
			}
			create_message = {
				type = MESSAGE_SUPPORTING_VOTER
				localization = MESSAGE_FAVOR_SUPPORTING_VOTER_DESC
				days = 30
				target = root.capital_scope
				variable = {
					type = name
					localization = WHO
					scope = root
				}
				variable = {
					type = name
					localization = LEADER
					scope = event_target:galcom_delegate
				}
			}
		}
	}
}

country_event = { # Delegate Focus Traits
	id = leader.320

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galcom_member = {
			limit = {
				NOT = {
					is_same_value = root
				}
				position_on_last_resolution = support
				any_owned_leader = {
					is_assigned_to_galcom = yes
					has_matching_resolution_category_focus_trait_tier1or2or3 = yes
				}
			}
			random_owned_leader = {
				limit = {
					is_assigned_to_galcom = yes
					has_matching_resolution_category_focus_trait_tier1or2or3 = yes
				}
				if = {
					limit = {
						has_matching_resolution_category_focus_trait_tier_1 = yes
					}
					delegate_focus_effect = {
						CHANCE = @resolution_focus_amt_1
					}
				}
				else_if = {
					limit = {
						has_matching_resolution_category_focus_trait_tier_2 = yes
					}
					delegate_focus_effect = {
						CHANCE = @resolution_focus_amt_2
					}
				}
				else = {
					delegate_focus_effect = {
						CHANCE = @resolution_focus_amt_3
					}
				}
			}
		}
	}
}
